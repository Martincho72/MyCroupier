{"version":3,"file":"static/js/main.4c5dae4f.js","mappings":"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","sources":["src/screens/LoadingScreen.js","src/metodos/Context.js","src/screens/LogIn/LogIn.js","src/components/Header.js","src/screens/LogIn/RecuperarContrasenya.js","src/screens/Registro/Registro.js","src/screens/Registro/PoliticaPrivacidad.js","src/screens/Registro/ConfirmarRegistro.js","src/screens/Registro/StackRegistro.js","src/components/HeaderMainMenu.js","src/screens/Home.js","src/screens/Ruleta/Tablas/SeleccionarTabla.js","src/metodos/StorageUtils.js","src/metodos/services.js","src/metodos/cargarRecord.js","src/metodos/actualizarRecord.js","src/components/StreakCounter.js","src/screens/Ruleta/Tablas/Tabla.js","src/screens/Ruleta/Tablas/TablasStack.js","src/screens/Ruleta/Zonas/Zonas.js","src/screens/Ruleta/Vecinos/Vecinos.js","src/metodos/UtilsCierre.js","src/screens/Ruleta/Cierre/Cierre.js","src/screens/Ruleta/Tab_Ruleta.js","src/screens/BlackJack/BlackJackPaga.js","src/metodos/cargarImagenes.js","src/screens/BlackJack/BlackJackGame.js","src/screens/BlackJack/Tab_BlackJack.js","src/metodos/UtilsClasificacion.js","src/screens/Clasificacion/Clasificacion.js","src/screens/AboutApp/AboutApp.js","src/screens/MainMenu.js","src/screens/LogIn/StackLogin.js","index.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, Modal, StatusBar, Platform, Image } from 'react-native';\r\n\r\n// Solo importa FastImage si no estamos en la web\r\nlet FastImage;\r\nif (Platform.OS !== 'web') {\r\n  FastImage = require('react-native-fast-image').default;\r\n}\r\n\r\nconst LoadingScreen = () => {\r\n  return (\r\n    <Modal transparent={true} visible={true} animationType=\"fade\" statusBarTranslucent>\r\n      <StatusBar backgroundColor=\"rgba(255, 255, 255, 0.9)\" barStyle=\"dark-content\" />\r\n      <View style={styles.overlay}>\r\n        {Platform.OS !== 'web' ? (\r\n          <FastImage\r\n            source={require('../assets/loading.gif')}\r\n            style={styles.image}\r\n          />\r\n        ) : (\r\n          <Image\r\n            source={require('../assets/loading.gif')}\r\n            style={styles.image}\r\n          />\r\n        )}\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    width: 250,\r\n    height: 250,\r\n  },\r\n});\r\n\r\nexport default LoadingScreen;","import { createContext, useState } from 'react';\r\n\r\nconst Context = createContext();\r\n\r\nconst ContextProvider = ({ children }) => {\r\n  const [informacionUsuario, setInformacionUsuario] = useState(null);\r\n  const [online, setOnline] = useState(false);\r\n\r\n  return (\r\n    <Context.Provider value={{ informacionUsuario, setInformacionUsuario, online, setOnline }}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default {\r\n  Context,\r\n  Provider: ContextProvider,\r\n};","import {\r\n  Text,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Pressable,\r\n  Image,\r\n  TextInput,\r\n  ScrollView,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  Alert\r\n} from 'react-native';\r\nimport { useState, useContext } from 'react';\r\n\r\nimport LoadingScreen from '../LoadingScreen';\r\nimport Contexto from '../../metodos/Context';\r\nconst { Context } = Contexto;\r\n\r\nexport default function LogIn(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [usuario, setUsuario] = useState('');\r\n  const [contrasenya, setContrasenya] = useState('');\r\n  const { setInformacionUsuario, setOnline } = useContext(Context);\r\n\r\n  const enviarDatos = async () => {\r\n    const url = 'http://54.237.169.52:8080/CroupierAPI/login';\r\n\r\n    if (!usuario || !contrasenya) {\r\n      Alert.alert('Campos vacíos', 'Rellena los campos vacíos.');\r\n      return;\r\n    }\r\n\r\n    const datos = {\r\n      nombreUsuario: usuario,\r\n      contrasenya: contrasenya,\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 25000);\r\n\r\n      const respuesta = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(datos),\r\n        signal: controller.signal,\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      const resultado = await respuesta.json();\r\n\r\n      if (!respuesta.ok) {\r\n        Alert.alert('Error', resultado.message || 'Error Desconocido.');\r\n        return;\r\n      }\r\n\r\n      console.log(resultado);\r\n      setInformacionUsuario(resultado);\r\n      setOnline(true)\r\n      props.navigation.navigate('MainMenu');\r\n      setUsuario(\"\");\r\n      setContrasenya(\"\");\r\n    } catch (error) {\r\n      let mensajeError = 'Hubo un problema al conectar con el servidor.';\r\n\r\n      if (error.name === 'AbortError') {\r\n        mensajeError = 'La conexión tardó demasiado. Revise su internet.';\r\n      } else if (error.message === 'Network request failed') {\r\n        mensajeError = 'No hay conexión a internet.';\r\n      }\r\n\r\n      Alert.alert('Error al iniciar sesión', mensajeError);\r\n      console.error('Error en la petición:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <KeyboardAvoidingView style={{ flex: 1 }} behavior=\"padding\">\r\n        <ScrollView\r\n          contentContainerStyle={[styles.scrollContainer, { minHeight: '100%' }]}\r\n          keyboardShouldPersistTaps=\"handled\"\r\n        >\r\n          <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n            <View>\r\n              <View style={styles.containerWelcome}>\r\n                <Text style={styles.paragraph}>¡Bienvenido!</Text>\r\n                <Image\r\n                  style={styles.logo}\r\n                  source={require('../../assets/logoV2.webp')}\r\n                />\r\n              </View>\r\n\r\n              <View style={{ alignItems: \"center\" }}>\r\n                <View style={styles.inputContainer}>\r\n                  <Text style={styles.label}>Usuario</Text>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    value={usuario}\r\n                    onChangeText={(text) => setUsuario(text.replace(/\\s/g, ''))}\r\n                    placeholder=\"Juanito\"\r\n                    placeholderTextColor=\"#888\"\r\n                  />\r\n                </View>\r\n\r\n                <View style={styles.inputContainer}>\r\n                  <Text style={styles.label}>Contraseña</Text>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    secureTextEntry\r\n                    value={contrasenya}\r\n                    onChangeText={(text) => setContrasenya(text.replace(/\\s/g, ''))}\r\n                    placeholder=\"••••••••\"\r\n                    placeholderTextColor=\"#888\"\r\n                  />\r\n                </View>\r\n\r\n                <Pressable\r\n                  onPress={() => {\r\n                    setOnline(false);\r\n                    props.navigation.navigate('MainMenu');\r\n                  }}\r\n                  style={styles.buttonRegistrar}>\r\n                  <Text style={styles.textRegistrar}>Acceder Sin Cuenta</Text>\r\n                </Pressable>\r\n\r\n                <Pressable\r\n                  onPress={() => enviarDatos()}\r\n                  style={styles.button}>\r\n                  <Text style={styles.buttonText}>Iniciar Sesión</Text>\r\n                </Pressable>\r\n\r\n                <Pressable\r\n                  onPress={() => props.navigation.navigate('StackRegistro')}\r\n                  style={styles.buttonRegistrar}>\r\n                  <Text style={styles.textRegistrar}>Registrarse</Text>\r\n                </Pressable>\r\n\r\n                <Pressable\r\n                  onPress={() => props.navigation.navigate('RecuperarContrasenya')}\r\n                  style={styles.buttonRegistrar}>\r\n                  <Text style={styles.textRegistrar}>Recuperar Contraseña</Text>\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        </ScrollView>\r\n      </KeyboardAvoidingView>\r\n      {loading && <LoadingScreen />}\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  scrollContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingBottom: 20,\r\n  },\r\n  containerWelcome: {\r\n    alignItems: 'center',\r\n    justifyContent: \"flex-end\",\r\n    padding: 10\r\n  },\r\n  paragraph: {\r\n    fontSize: 45,\r\n    textAlign: 'center',\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  button: {\r\n    backgroundColor: 'black',\r\n    width: 300,\r\n    padding: 12,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  buttonRegistrar: {\r\n    backgroundColor: '#fcfcfc',\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    margin: 8,\r\n  },\r\n  textRegistrar: {\r\n    color: 'black',\r\n    fontSize: 25,\r\n    fontFamily: 'Merriweather-Light',\r\n    textDecorationLine: \"underline\",\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 23,\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n  logo: {\r\n    height: 250,\r\n    width: 250,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n  },\r\n  inputContainer: {\r\n    marginBottom: 11,\r\n    width: 300,\r\n  },\r\n  label: {\r\n    fontSize: 18,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n    marginBottom: 5,\r\n    marginLeft: 5,\r\n    color: '#333',\r\n  },\r\n  input: {\r\n    height: 60,\r\n    width: '100%',\r\n    borderWidth: 2,\r\n    borderRadius: 8,\r\n    fontSize: 27,\r\n    textAlign: 'center',\r\n    fontFamily: 'Arial',\r\n    color: '#000',\r\n    backgroundColor: '#fff',\r\n  },\r\n});\r\n","import { View, Pressable, Image, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst Header = (props) => {\r\n  const navigation = useNavigation();\r\n\r\n  const { backVisible = true, backAction = () => navigation.goBack() } = props;\r\n  const { homeVisible = true, homeAction = () => navigation.navigate('Home') } = props;\r\n\r\n  return (\r\n    <View style={styles.header}>\r\n      <View style={styles.back}>\r\n        {backVisible && (\r\n          <Pressable onPress={backAction} style={{\r\n            width: 60,\r\n            height: 60\r\n          }}>\r\n            <Image source={require('../assets/izquierda.webp')} style={styles.icon} />\r\n          </Pressable>\r\n        )}\r\n      </View>\r\n      <View style={styles.home}>\r\n        {homeVisible &&\r\n          (<Pressable onPress={homeAction} style={{\r\n            width: 80,\r\n            height: 80\r\n          }}>\r\n            <Image source={require('../assets/logoV2.webp')} style={styles.logo} />\r\n          </Pressable>\r\n          )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    flex: 1,\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'row',\r\n  },\r\n  back: {\r\n    flex: 1,\r\n    width: 80,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    marginHorizontal: 10,\r\n    marginTop: 35,\r\n  },\r\n  logo: {\r\n    width: 60,\r\n    height: 60,\r\n    marginHorizontal: 10,\r\n    marginTop: 35,\r\n    borderRadius: 10\r\n  },\r\n  home: {\r\n    flex: 1,\r\n    width: 80,\r\n    alignItems: 'flex-end',\r\n  },\r\n});\r\n\r\nexport default Header;","import {\r\n  Text,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Pressable,\r\n  TextInput,\r\n  ScrollView,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Alert\r\n} from 'react-native';\r\nimport { useState } from 'react';\r\nimport Header from '../../components/Header';\r\nimport LoadingScreen from '../LoadingScreen';\r\n\r\nexport default function RecuperarContrasenya(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [correo, setCorreo] = useState('');\r\n\r\n  const esCorreoValido = (correo) => {\r\n    const regexCorreo = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return regexCorreo.test(correo);\r\n  };\r\n\r\n  const recuperarContrasenya = async () => {\r\n    const url = 'http://54.237.169.52:8080/CroupierAPI/forgottenPassword';\r\n\r\n    if (!correo) {\r\n      Alert.alert('Campo vacío', 'Introduzca el correo electrónico asociado a su cuenta.');\r\n      return;\r\n    }\r\n\r\n    if (!esCorreoValido(correo)) {\r\n      Alert.alert(\"Correo no válido\", \"Ingrese un correo electrónico válido.\");\r\n      return;\r\n    }\r\n\r\n    const datos = {\r\n      correoElectronico: correo,\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 25000);\r\n\r\n      const respuesta = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(datos),\r\n        signal: controller.signal,\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      const resultado = await respuesta.json();\r\n\r\n      if (!respuesta.ok) {\r\n        Alert.alert('Error', resultado.message || 'Error Desconocido.');\r\n        return;\r\n      }\r\n\r\n      Alert.alert('Nueva contraseña', resultado.message);\r\n      console.log(resultado);\r\n      props.navigation.navigate('LogIn');\r\n\r\n    } catch (error) {\r\n      let mensajeError = 'Hubo un problema al conectar con el servidor.';\r\n\r\n      if (error.name === 'AbortError') {\r\n        mensajeError = 'La conexión tardó demasiado. Revisa tu internet.';\r\n      } else if (error.message === 'Network request failed') {\r\n        mensajeError = 'No hay conexión a internet.';\r\n      }\r\n\r\n      Alert.alert('Error al recuperar contraseña', mensajeError);\r\n      console.error('Error en la petición:', error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n        <ScrollView\r\n          contentContainerStyle={styles.scrollContainer}\r\n          keyboardShouldPersistTaps=\"handled\"\r\n        >\r\n          <SafeAreaView style={styles.container}>\r\n            <Header homeVisible={false} />\r\n\r\n            <View style={styles.contentContainer}>\r\n              <Text style={styles.title}>RECUPERAR CONTRASEÑA</Text>\r\n\r\n              <Image\r\n                style={styles.logo}\r\n                source={require('../../assets/logoV2.webp')}\r\n              />\r\n\r\n              <View style={styles.inputContainer}>\r\n                <Text style={styles.label}>Correo Electrónico</Text>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  value={correo}\r\n                  onChangeText={setCorreo}\r\n                  placeholder=\"Escriba su correo electrónico\"\r\n                  placeholderTextColor=\"#888\"\r\n                  returnKeyType=\"done\"\r\n                />\r\n              </View>\r\n\r\n              <Pressable\r\n                onPress={() => recuperarContrasenya()}\r\n                style={styles.button}\r\n              >\r\n                <Text style={styles.buttonText}>Recuperar Contraseña</Text>\r\n              </Pressable>\r\n            </View>\r\n          </SafeAreaView>\r\n          {loading && <LoadingScreen />}\r\n        </ScrollView>\r\n      </TouchableWithoutFeedback>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  contentContainer: {\r\n    flex: 3,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  title: {\r\n    fontSize: 40,\r\n    textAlign: 'center',\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  logo: {\r\n    width: 250,\r\n    height: 250,\r\n    marginBottom: 20,\r\n    opacity: 0.4\r\n  },\r\n  inputContainer: {\r\n    width: '100%',\r\n    maxWidth: 350,\r\n    marginBottom: 20,\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    marginBottom: 8,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 8,\r\n    paddingHorizontal: 15,\r\n    fontSize: 16,\r\n    backgroundColor: '#fff',\r\n    textAlign: 'center',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    maxWidth: 350,\r\n    height: 50,\r\n    backgroundColor: '#000',\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 15,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n});","import {\r\n  Text,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Pressable,\r\n  TextInput,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Alert\r\n} from 'react-native';\r\nimport { useState } from 'react';\r\nimport Header from '../../components/Header';\r\nimport LoadingScreen from '../LoadingScreen';\r\n\r\nexport default function Registro(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [usuario, setUsuario] = useState('');\r\n  const [correoElectronico, setCorreoElectronico] = useState('');\r\n  const [contrasenya, setContrasenya] = useState('');\r\n  const [confirmarContrasenya, setConfirmarContrasenya] = useState('');\r\n  const [aceptoTerminos, setAceptoTerminos] = useState(false);\r\n\r\n  const esCorreoValido = (correo) => {\r\n    const regexCorreo = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return regexCorreo.test(correo);\r\n  };\r\n\r\n  const enviarDatos = async () => {\r\n    if (aceptoTerminos === true) {\r\n      if (\r\n        usuario == '' ||\r\n        correoElectronico == '' ||\r\n        contrasenya == '' ||\r\n        confirmarContrasenya == ''\r\n      ) {\r\n        Alert.alert('Campos vacíos', 'Rellene los campos vacíos.');\r\n        return;\r\n      } else if (!esCorreoValido(correoElectronico)) {\r\n        Alert.alert(\"Correo no válido\", \"Ingrese un correo electrónico válido.\");\r\n        return;\r\n      } else if (contrasenya !== confirmarContrasenya) {\r\n        Alert.alert('Error Contraseñas', \"Las contraseñas no coinciden.\");\r\n        return;\r\n      }\r\n\r\n      setLoading(true);\r\n\r\n      const url = 'http://54.237.169.52:8080/CroupierAPI/register';\r\n      const datos = {\r\n        nombreUsuario: usuario,\r\n        contrasenya: contrasenya,\r\n        correoElectronico: correoElectronico,\r\n      };\r\n\r\n      try {\r\n        const controller = new AbortController();\r\n        const timeoutId = setTimeout(() => controller.abort(), 25000); // 25 segundos\r\n\r\n        const respuesta = await fetch(url, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(datos),\r\n          signal: controller.signal,\r\n        });\r\n\r\n        clearTimeout(timeoutId);\r\n\r\n        const resultado = await respuesta.json();\r\n\r\n        if (!respuesta.ok) {\r\n          Alert.alert('Error', resultado.message || 'Error Desconocido.');\r\n          return;\r\n        }\r\n\r\n        Alert.alert(\"Verificar Cuenta\", \"Revise su correo e ingrese el código en la pantalla de confirmación.\");\r\n        props.navigation.navigate(\"ConfirmarRegistro\");\r\n        console.log(resultado);\r\n\r\n      } catch (error) {\r\n        let mensajeError = 'Hubo un problema al conectar con el servidor.';\r\n\r\n        if (error.name === 'AbortError') {\r\n          mensajeError = 'La conexión tardó demasiado. Revisa tu internet.';\r\n        } else if (error.message === 'Network request failed') {\r\n          mensajeError = 'No hay conexión a internet.';\r\n        }\r\n\r\n        Alert.alert('Error al registrar el usuario', mensajeError);\r\n        console.error('Error en la petición:', error);\r\n\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      Alert.alert(\r\n        'Términos y condiciones NO aceptados',\r\n        'Acepte la política de privacidad para registrarse.'\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n        <ScrollView\r\n          contentContainerStyle={styles.scrollContainer}\r\n          keyboardShouldPersistTaps=\"handled\"\r\n        >\r\n          <SafeAreaView style={styles.container}>\r\n            <Header homeVisible={false} />\r\n\r\n            <View style={styles.containerWelcome}>\r\n              <Text style={styles.paragraph}>REGISTRO</Text>\r\n            </View>\r\n\r\n            <View style={styles.formContainer}>\r\n              <View style={styles.inputGroup}>\r\n                <Text style={styles.label}>Usuario</Text>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  value={usuario}\r\n                  onChangeText={(text) => setUsuario(text.replace(/\\s/g, ''))}\r\n                  placeholder=\"Juanito\"\r\n                  placeholderTextColor=\"#888\"\r\n                  returnKeyType=\"next\"\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.inputGroup}>\r\n                <Text style={styles.label}>Correo Electrónico</Text>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  value={correoElectronico}\r\n                  onChangeText={(text) => setCorreoElectronico(text.replace(/\\s/g, ''))}\r\n                  placeholder=\"juanito@correo.com\"\r\n                  placeholderTextColor=\"#888\"\r\n                  keyboardType=\"email-address\"\r\n                  returnKeyType=\"next\"\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.inputGroup}>\r\n                <Text style={styles.label}>Contraseña</Text>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  value={contrasenya}\r\n                  secureTextEntry\r\n                  onChangeText={(text) => setContrasenya(text.replace(/\\s/g, ''))}\r\n                  placeholder=\"Escriba su contraseña\"\r\n                  placeholderTextColor=\"#888\"\r\n                  returnKeyType=\"next\"\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.inputGroup}>\r\n                <Text style={styles.label}>Confirmar Contraseña</Text>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  value={confirmarContrasenya}\r\n                  secureTextEntry\r\n                  onChangeText={(text) => setConfirmarContrasenya(text.replace(/\\s/g, ''))}\r\n                  placeholder=\"Repita su contraseña\"\r\n                  placeholderTextColor=\"#888\"\r\n                  returnKeyType=\"done\"\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.termsContainer}>\r\n                <TouchableOpacity\r\n                  style={[styles.checkbox, aceptoTerminos && styles.checked]}\r\n                  onPress={() => setAceptoTerminos(!aceptoTerminos)}\r\n                >\r\n                  {aceptoTerminos && <Text style={styles.checkmark}>✓</Text>}\r\n                </TouchableOpacity>\r\n                <Text style={styles.checkboxLabel}>Acepto los </Text>\r\n                <Pressable onPress={() => console.log(\"Mostrar términos\")}>\r\n                  <Text style={styles.linkText}>términos y condiciones</Text>\r\n                </Pressable>\r\n              </View>\r\n\r\n              <Pressable\r\n                onPress={() => props.navigation.navigate('PoliticaPrivacidad')}\r\n                style={styles.privacyLink}\r\n              >\r\n                <Text style={styles.linkText}>Leer política de privacidad</Text>\r\n              </Pressable>\r\n\r\n              <Pressable\r\n                onPress={() => enviarDatos()}\r\n                style={styles.button}\r\n              >\r\n                <Text style={styles.buttonText}>Registrarse</Text>\r\n              </Pressable>\r\n\r\n              <Pressable\r\n                onPress={() => props.navigation.navigate('ConfirmarRegistro')}\r\n                style={styles.button}\r\n              >\r\n                <Text style={styles.buttonText}>Ingresar código de confirmación</Text>\r\n              </Pressable>\r\n            </View>\r\n          </SafeAreaView>\r\n        </ScrollView>\r\n      </TouchableWithoutFeedback>\r\n      {loading && <LoadingScreen />}\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n  },\r\n  containerWelcome: {\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  paragraph: {\r\n    fontSize: 45,\r\n    textAlign: 'center',\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  formContainer: {\r\n    width: '100%',\r\n    maxWidth: 400,\r\n    alignSelf: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  inputGroup: {\r\n    marginBottom: 20,\r\n  },\r\n  label: {\r\n    fontSize: 18,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n    marginBottom: 8,\r\n    color: '#333',\r\n  },\r\n  input: {\r\n    height: 50,\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    paddingHorizontal: 15,\r\n    fontSize: 16,\r\n    color: '#000',\r\n    backgroundColor: '#fff',\r\n  },\r\n  termsContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: \"center\",\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 15,\r\n    flexWrap: 'wrap',\r\n  },\r\n  checkbox: {\r\n    width: 20,\r\n    height: 20,\r\n    borderWidth: 1,\r\n    borderColor: '#666',\r\n    borderRadius: 4,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginRight: 8,\r\n  },\r\n  checked: {\r\n    backgroundColor: 'black',\r\n    borderColor: 'black',\r\n  },\r\n  checkmark: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n  },\r\n  checkboxLabel: {\r\n    fontSize: 14,\r\n    fontFamily: 'Merriweather-Light',\r\n    color: '#333',\r\n  },\r\n  privacyLink: {\r\n    marginBottom: 25,\r\n    alignSelf: 'center',\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: 'black',\r\n    textDecorationLine: 'underline',\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n  button: {\r\n    backgroundColor: 'black',\r\n    width: '100%',\r\n    padding: 15,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  secondaryButton: {\r\n    width: '100%',\r\n    padding: 10,\r\n    alignItems: 'center',\r\n  },\r\n  secondaryButtonText: {\r\n    color: 'black',\r\n    fontSize: 16,\r\n    fontFamily: 'Merriweather-Light',\r\n    textDecorationLine: \"underline\"\r\n  },\r\n});","import React from 'react';\r\nimport { ScrollView, Text, View, StyleSheet } from 'react-native';\r\nimport Header from '../../components/Header';\r\n\r\nconst PoliticaPrivacidad = () => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView contentContainerStyle={styles.scrollContent}>\r\n        <Header homeVisible={false}/>\r\n        <Text style={styles.title}>POLÍTICA DE PRIVACIDAD</Text>\r\n\r\n        <View style={styles.card}>\r\n          <Text style={styles.introText}>\r\n            Tu privacidad es nuestra prioridad. Protegemos tus datos y solo los utilizamos de acuerdo\r\n            con nuestra política. Consulta nuestros términos de uso para más información.\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>1. Recopilación de información</Text>\r\n          <Text style={styles.sectionText}>\r\n            Cuando usas nuestra aplicación, podemos recopilar información automáticamente o de manera\r\n            voluntaria, como datos personales proporcionados por el usuario (nombre, correo\r\n            electrónico, número de teléfono) y datos de uso del dispositivo (dirección IP, tipo de\r\n            dispositivo, versión del sistema operativo y patrones de navegación dentro de la\r\n            aplicación).\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>2. Uso de la información</Text>\r\n          <Text style={styles.sectionText}>\r\n            La información recopilada se utiliza para mejorar la funcionalidad de la aplicación,\r\n            proporcionar soporte técnico, personalizar la experiencia del usuario y, en algunos casos,\r\n            enviar notificaciones relevantes. No compartiremos ni venderemos tu información a terceros\r\n            sin tu consentimiento, excepto cuando lo exija la ley.\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>3. Almacenamiento y Seguridad</Text>\r\n          <Text style={styles.sectionText}>\r\n            Implementamos medidas de seguridad adecuadas para proteger tu información contra el\r\n            acceso, alteración o divulgación no autorizados. Sin embargo, ninguna transmisión de datos\r\n            a través de Internet o almacenamiento electrónico es completamente segura, por lo que no\r\n            podemos garantizar una seguridad absoluta.\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>4. Permisos de la Aplicación</Text>\r\n          <Text style={styles.sectionText}>\r\n            Nuestra aplicación puede solicitar permisos para acceder a ciertas funciones del\r\n            dispositivo, como la cámara, el micrófono, la ubicación o el almacenamiento, únicamente\r\n            cuando sea necesario para ofrecer las funcionalidades del servicio. El acceso a estos\r\n            datos se realiza de manera transparente y siempre con el consentimiento previo del usuario.\r\n            Puedes gestionar o revocar estos permisos en cualquier momento a través de la configuración\r\n            de tu dispositivo.\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={styles.footer}>\r\n          <Text style={styles.footerText}>Última actualización: {new Date().getFullYear()}</Text>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  scrollContent: {\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 15,\r\n  },\r\n  title: {\r\n    marginTop: 35,\r\n    fontSize: 26,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginBottom: 25,\r\n    color: '#2c3e50',\r\n  },\r\n  card: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  introText: {\r\n    fontSize: 16,\r\n    lineHeight: 24,\r\n    color: '#34495e',\r\n    textAlign: 'center',\r\n  },\r\n  section: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: '#2c3e50',\r\n  },\r\n  sectionText: {\r\n    fontSize: 15,\r\n    lineHeight: 22,\r\n    color: '#34495e',\r\n  },\r\n  footer: {\r\n    marginTop: 10,\r\n    paddingVertical: 15,\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#ecf0f1',\r\n  },\r\n  footerText: {\r\n    textAlign: 'center',\r\n    color: '#7f8c8d',\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default PoliticaPrivacidad;","import {\r\n  Text,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Pressable,\r\n  TextInput,\r\n  ScrollView,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Alert\r\n} from 'react-native';\r\nimport { useState } from 'react';\r\nimport Header from '../../components/Header';\r\nimport LoadingScreen from '../LoadingScreen';\r\n\r\nexport default function ConfirmarRegistro(props) {\r\n  const [codigo, setCodigo] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const confRegistro = async () => {\r\n    const url = 'http://54.237.169.52:8080/CroupierAPI/confirmRegister';\r\n\r\n    if (codigo == null || codigo == '') {\r\n      Alert.alert('Campo vacío', 'Introduzca el código de 7 dígitos.');\r\n      return;\r\n    }\r\n\r\n    const datos = {\r\n      numeroConfirmacion: codigo,\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 25000);\r\n\r\n      const respuesta = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(datos),\r\n        signal: controller.signal,\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      const resultado = await respuesta.json();\r\n\r\n      if (!respuesta.ok) {\r\n        Alert.alert('Error verificando el código', 'Número incorrecto');\r\n        return;\r\n      }\r\n\r\n      Alert.alert('Información del mensaje', resultado.message);\r\n      console.log(resultado);\r\n      props.navigation.navigate('LogIn');\r\n\r\n    } catch (error) {\r\n      let mensajeError = 'Hubo un problema al conectar con el servidor.';\r\n\r\n      if (error.name === 'AbortError') {\r\n        mensajeError = 'La conexión tardó demasiado. Revisa tu internet.';\r\n      } else if (error.message === 'Network request failed') {\r\n        mensajeError = 'No hay conexión a internet.';\r\n      }\r\n\r\n      Alert.alert('Error al confirmar registro', mensajeError);\r\n      console.error('Error en la petición:', error);\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n        <ScrollView\r\n          contentContainerStyle={styles.scrollContainer}\r\n          keyboardShouldPersistTaps=\"handled\"\r\n        >\r\n          <SafeAreaView style={styles.container}>\r\n            <Header homeVisible={false} />\r\n\r\n            <View style={styles.contentContainer}>\r\n              <Text style={styles.title}>CONFIRMAR REGISTRO</Text>\r\n\r\n              <Image\r\n                style={styles.logo}\r\n                source={require('../../assets/logoV2.webp')}\r\n              />\r\n\r\n              <View style={styles.inputContainer}>\r\n                <Text style={styles.label}>Código de verificación</Text>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  value={codigo}\r\n                  onChangeText={setCodigo}\r\n                  placeholder=\"Ingrese el código de 7 dígitos\"\r\n                  placeholderTextColor=\"#888\"\r\n                  keyboardType=\"number-pad\"\r\n                  maxLength={7}\r\n                  returnKeyType=\"done\"\r\n                />\r\n              </View>\r\n\r\n              <Pressable\r\n                onPress={() => confRegistro()}\r\n                style={styles.button}\r\n              >\r\n                <Text style={styles.buttonText}>Confirmar</Text>\r\n              </Pressable>\r\n            </View>\r\n          </SafeAreaView>\r\n          {loading && <LoadingScreen />}\r\n        </ScrollView>\r\n      </TouchableWithoutFeedback>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  contentContainer: {\r\n    flex: 3,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  title: {\r\n    fontSize: 40,\r\n    textAlign: 'center',\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  logo: {\r\n    width: 250,\r\n    height: 250,\r\n    marginBottom: 20,\r\n    opacity: 0.4\r\n  },\r\n  inputContainer: {\r\n    width: '100%',\r\n    maxWidth: 350,\r\n    marginBottom: 20,\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    marginBottom: 8,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 8,\r\n    paddingHorizontal: 15,\r\n    fontSize: 16,\r\n    backgroundColor: '#fff',\r\n    textAlign: 'center',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    maxWidth: 350,\r\n    height: 50,\r\n    backgroundColor: '#000',\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 15,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n});","import { createStackNavigator } from '@react-navigation/stack';\r\nimport Registro from './Registro';\r\nimport PoliticaPrivacidad from './PoliticaPrivacidad';\r\nimport ConfirmarRegistro from './ConfirmarRegistro';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst StackRegistro = () => (\r\n  <Stack.Navigator options=\"false\">\r\n    <Stack.Screen\r\n      name=\"Registro\"\r\n      component={Registro}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <Stack.Screen\r\n      name=\"PoliticaPrivacidad\"\r\n      component={PoliticaPrivacidad}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <Stack.Screen\r\n      name=\"ConfirmarRegistro\"\r\n      component={ConfirmarRegistro}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </Stack.Navigator>\r\n);\r\n\r\nexport default StackRegistro;","import { View, Pressable, Image, StyleSheet } from 'react-native';\r\nimport { useContext } from 'react'\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Contexto from '../metodos/Context';\r\nconst { Context } = Contexto;\r\n\r\nconst HeaderMainMenu = (props) => {\r\n  const navigation = useNavigation();\r\n  const { informacionUsuario, online, setOnline, setInformacionUsuario } = useContext(Context);\r\n\r\n  const cerrarSesion = async () => {\r\n    if (!informacionUsuario?.token) {\r\n      console.warn('Token no disponible');\r\n      return;\r\n    }\r\n\r\n    const url = `http://54.237.169.52:8080/CroupierAPI/logout?token=${informacionUsuario.token}`;\r\n\r\n    try {\r\n      const respuesta = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!respuesta.ok) {\r\n        console.warn('Logout fallido con status:', respuesta.status);\r\n        return;\r\n      }\r\n\r\n      console.log('Logout exitoso (204 No Content)');\r\n\r\n    } catch (error) {\r\n      console.error('Error al cerrar sesión:', error);\r\n    }\r\n  };\r\n\r\n  const { backVisible = true, backAction = () => {\r\n    if (online) {\r\n      cerrarSesion();\r\n      setOnline(false);\r\n      setInformacionUsuario(null);\r\n    }\r\n    navigation.navigate('LogIn');\r\n  } } = props;\r\n  const { homeVisible = true, homeAction = () => navigation.navigate('AboutApp') } = props;\r\n\r\n  return (\r\n    <View style={styles.header}>\r\n      <View style={styles.back}>\r\n        {backVisible && (\r\n          <Pressable onPress={backAction} style={{\r\n            width: 80,\r\n            height: 80,\r\n          }}>\r\n            <Image source={require('../assets/logout.webp')} style={styles.icon} />\r\n          </Pressable>\r\n        )}\r\n      </View>\r\n      <View style={styles.home}>\r\n        {homeVisible &&\r\n          (<Pressable onPress={homeAction} style={{\r\n            width: 80,\r\n            height: 80,\r\n          }}>\r\n            <Image source={require('../assets/info.webp')} style={styles.logo} />\r\n          </Pressable>\r\n          )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    flex: 1,\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'row',\r\n  },\r\n  back: {\r\n    flex: 1,\r\n    width: 80,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    marginHorizontal: 10,\r\n    marginTop: 35,\r\n  },\r\n  logo: {\r\n    width: 50,\r\n    height: 50,\r\n    marginHorizontal: 10,\r\n    marginTop: 35,\r\n    borderRadius: 10\r\n  },\r\n  home: {\r\n    flex: 1,\r\n    width: 80,\r\n    alignItems: 'flex-end',\r\n  },\r\n});\r\n\r\nexport default HeaderMainMenu;","import {\r\n  Text,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Pressable,\r\n  Image,\r\n} from 'react-native';\r\n\r\nimport HeaderMainMenu from '../components/HeaderMainMenu';\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <HeaderMainMenu />\r\n      <View style={{ flex: 5 }}>\r\n        <View style={styles.containerWelcome}>\r\n          <Image\r\n            style={styles.logo}\r\n            source={require('../assets/logoV2.webp')}></Image>\r\n        </View>\r\n        <View style={styles.containerButtons}>\r\n          <View>\r\n            <Pressable\r\n              onPress={() => props.navigation.navigate('Tab_Ruleta')}\r\n              style={styles.button}>\r\n              <Text style={styles.buttonText}>Ruleta</Text>\r\n            </Pressable>\r\n          </View>\r\n          <View>\r\n            <Pressable\r\n              onPress={() => props.navigation.navigate('Tab_BlackJack')}\r\n              style={styles.button}>\r\n              <Text style={styles.buttonText}>Blackjack</Text>\r\n            </Pressable>\r\n          </View>\r\n          <View>\r\n            <Pressable\r\n              onPress={() => props.navigation.navigate('Clasificacion')}\r\n              style={styles.button}>\r\n              <Text style={styles.buttonText}>Clasificación</Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  containerWelcome: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: \"center\"\r\n  },\r\n  containerButtons: {\r\n    flex: 1,\r\n    justifyContent: 'flex-start'\r\n  },\r\n  paragraph: {\r\n    fontSize: 50,\r\n    textAlign: 'center',\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  button: {\r\n    backgroundColor: 'black',\r\n    width: 300,\r\n    padding: 12,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 25,\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n  logo: {\r\n    height: 250,\r\n    width: 250,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10\r\n  },\r\n});","import { useState } from 'react';\r\nimport {\r\n  Text,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Pressable,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  ScrollView,\r\n} from 'react-native';\r\n\r\nimport Header from '../../../components/Header';\r\n\r\nexport default function SeleccionarTabla(props) {\r\n  const [tablasPorFichas, setTablasPorFichas] = useState([5, 8, 11, 17, 35]);\r\n  const [tablasPorValor, setTablasPorValor] = useState([\r\n    1.25, 2.5, 10, 25, 50, 100, 500,\r\n  ]);\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n      <SafeAreaView style={styles.container}>\r\n        <KeyboardAvoidingView\r\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n          style={{ flex: 1 }}>\r\n          <Header backVisible={false}/>\r\n          <View style={styles.body}>\r\n            <View style={{flex: 1, justifyContent: \"center\", alignItems: \"center\", padding: 8}}>\r\n              <Text style={styles.title}>Tablas por fichas:</Text>\r\n              <View style={styles.gridContainer}>\r\n                {tablasPorFichas.map((tabla, index) => (\r\n                  <Pressable\r\n                    key={index}\r\n                    style={styles.button}\r\n                    onPress={() =>\r\n                      props.navigation.navigate('Tabla', { tabla })\r\n                    }>\r\n                    <Text style={styles.buttonText}>{tabla}</Text>\r\n                  </Pressable>\r\n                ))}\r\n              </View>\r\n            </View>\r\n\r\n            <View style={{flex: 1}}>\r\n              <Text style={styles.title}>Tablas por valor:</Text>\r\n              <View style={styles.gridContainer}>\r\n                {tablasPorValor.map((tabla, index) => (\r\n                  <Pressable\r\n                    key={index}\r\n                    style={styles.button}\r\n                    onPress={() =>\r\n                      props.navigation.navigate('Tabla', { tabla })\r\n                    }>\r\n                    <Text style={styles.buttonText}>{tabla}</Text>\r\n                  </Pressable>\r\n                ))}\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </KeyboardAvoidingView>\r\n      </SafeAreaView>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  scrollContainer: {\r\n    alignItems: 'center',\r\n    flexGrow: 1,\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  body: {\r\n    flex: 8,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  title: {\r\n    fontSize: 33,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  gridContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    gap: 15,\r\n    marginTop: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: 'black',\r\n    width: 80,\r\n    height: 80,\r\n    borderRadius: 15,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 25,\r\n    fontWeight: 'bold',\r\n  },\r\n});","import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport const cargarDato = async (clave, setEstado) => {\r\n  try {\r\n    const valorGuardado = await AsyncStorage.getItem(clave);\r\n    if (valorGuardado !== null) {\r\n      setEstado(parseInt(valorGuardado));\r\n    } else {\r\n      setEstado(0);\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error cargando los datos para ${clave}:`, error);\r\n  }\r\n};\r\n\r\nexport const guardarDato = async (clave, valor) => {\r\n  try {\r\n    await AsyncStorage.setItem(clave, valor.toString());\r\n  } catch (error) {\r\n    console.error(`Error guardando los datos para ${clave}:`, error);\r\n  }\r\n};\r\n\r\nexport const borrarTodosLosRecords = async () => {\r\n  try {\r\n    await AsyncStorage.clear();\r\n    console.log('Todos los registros han sido borrados');\r\n  } catch (error) {\r\n    console.error('Error borrando todos los registros:', error);\r\n  }\r\n};\r\n","export const getData = async (url) => {\r\n    try {\r\n        const response = await fetch(url);\r\n        if (response.ok) {\r\n          const jsonResponse = await response.json();\r\n          console.log(jsonResponse);\r\n          return (jsonResponse);\r\n        } else {\r\n          return false;\r\n        }\r\n      } catch (error) {\r\n        return console.log(error);\r\n      }\r\n  };\r\n  export default getData;","import getData from './services';\r\n\r\nexport const cargarRecord = async (token, nombreRecord, id_usuario, setRecord) => {\r\n    const url = `http://54.237.169.52:8080/CroupierAPI/getRecordEspecifico?token=${token}&nombreRecord=${nombreRecord}&id_usuario=${id_usuario}`;\r\n    try {\r\n        const data = await getData(url);\r\n        console.log(\"datos: \", data);\r\n        const clasifications = data;\r\n\r\n        if (clasifications != undefined) {\r\n            setRecord(clasifications.puntuacion);\r\n        } else {\r\n            setRecord(0);\r\n        }\r\n\r\n    } catch {\r\n        console.log(\"Error al cargar el record:\");\r\n        setRecord(0);\r\n    }\r\n};\r\nexport default cargarRecord;","export const actualizarRecord = async (nombreR, id_usu, record, tok) => {\r\n  const url = 'http://54.237.169.52:8080/CroupierAPI/saveRecord';\r\n\r\n  const datos = {\r\n    nombreRecord: nombreR,\r\n    id_usuario: id_usu,\r\n    puntuacion: record,\r\n    token: tok\r\n  };\r\n\r\n  try {\r\n    console.log('Enviando datos:', datos);\r\n\r\n    const respuesta = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(datos),\r\n    });\r\n\r\n    const resultado = await respuesta.json();\r\n\r\n    console.log('Respuesta cruda:', respuesta.status, resultado);\r\n\r\n    if (!respuesta.ok) {\r\n      Alert.alert('Error al actualizar récord', resultado.message || 'Error Desconocido.');\r\n      return;\r\n    }\r\n\r\n    console.log('Resultado exitoso:', resultado);\r\n\r\n  } catch (error) {\r\n    console.error('Error en la petición:', error);\r\n    Alert.alert('Error al actualizar récord', error.message || 'Error inesperado.');\r\n  }\r\n};\r\nexport default actualizarRecord;","import { View, Text, StyleSheet } from 'react-native';\r\n\r\nconst StreakCounter = ({ racha, record }) => {\r\n  return (\r\n    <View style={styles.streak}>\r\n      <View style={styles.racha}>\r\n        <Text style={styles.textRacha}> Racha: {racha} </Text>\r\n      </View>\r\n      <View style={styles.racha}>\r\n        <Text style={styles.textRacha}> Récord: {record} </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  streak: {\r\n    flex: 0.5,\r\n    flexDirection: 'row',\r\n  },\r\n  racha: {\r\n    flex: 1,\r\n  },\r\n  textRacha: {\r\n    fontSize: 21,\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n});\r\n\r\nexport default StreakCounter;\r\n","import { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n  Text,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Pressable,\r\n  TextInput,\r\n} from 'react-native';\r\n\r\nimport { cargarDato, guardarDato } from '../../../metodos/StorageUtils';\r\nimport { cargarRecord } from '../../../metodos/cargarRecord';\r\nimport actualizarRecord from '../../../metodos/actualizarRecord';\r\n\r\nimport Contexto from '../../../metodos/Context';\r\nconst { Context } = Contexto;\r\n\r\nimport StreakCounter from '../../../components/StreakCounter';\r\nimport Header from '../../../components/Header';\r\nexport default function Tabla({ route }) {\r\n  const { tabla } = route.params ?? 5;\r\n\r\n  const nombreRecord = `RecordTabla${tabla}`;\r\n  const { informacionUsuario, online } = useContext(Context);\r\n\r\n  const [resultadoCorrecto, setResultadoCorrecto] = useState(0);\r\n  const [numeroMultiplicado, setNumeroMultiplicado] = useState(0);\r\n  const [respuestaUsuario, setRespuestaUsuario] = useState(0);\r\n  const [textoComprobar, setTextoComprobar] = useState('');\r\n  const [colorComprobar, setColorComprobar] = useState('');\r\n  const [mostrarRespuesta, setMostrarRespuesta] = useState(false);\r\n  const [racha, setRacha] = useState(0);\r\n  const [record, setRecord] = useState(0);\r\n\r\n  useEffect(() => {\r\n    generarMultiplicacion();\r\n\r\n    if (online) {\r\n      cargarRecord(informacionUsuario.token, nombreRecord, informacionUsuario.id_usuario, setRecord);\r\n    } else {\r\n      cargarDato(nombreRecord, setRecord)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (online) {\r\n      actualizarRecord(nombreRecord, informacionUsuario.id_usuario, record, informacionUsuario.token);\r\n    } else {\r\n      guardarDato(nombreRecord, record);\r\n    }\r\n  }, [record]);\r\n\r\n  const generarMultiplicacion = () => {\r\n    let multiplicador = -1;\r\n    do {\r\n      multiplicador = Math.floor(Math.random() * 20) + 1;\r\n    } while (multiplicador == numeroMultiplicado);\r\n    let resultado = tabla * multiplicador;\r\n    setNumeroMultiplicado(multiplicador);\r\n    setResultadoCorrecto(resultado);\r\n  };\r\n\r\n  const verificarRespuesta = () => {\r\n    if (respuestaUsuario == resultadoCorrecto) {\r\n      setRespuestaUsuario(0);\r\n      setMostrarRespuesta(false);\r\n      setTextoComprobar('¡Correcto!');\r\n      setColorComprobar('green');\r\n      let rachaAvanza = racha + 1;\r\n\r\n      if (rachaAvanza > record) {\r\n        setRecord(rachaAvanza);\r\n      }\r\n\r\n      setRacha(rachaAvanza);\r\n      generarMultiplicacion();\r\n    } else {\r\n      setTextoComprobar('¡Incorrecto!');\r\n      setColorComprobar('red');\r\n\r\n      if (racha > record) {\r\n        setRecord(racha);\r\n      }\r\n      setRacha(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Header />\r\n      <View style={styles.body}>\r\n        <View style={{ flex: 0.9, justifyContent: 'center' }}>\r\n          <Text style={styles.paragraph}> Tabla del {tabla}: </Text>\r\n        </View>\r\n        {mostrarRespuesta && (\r\n          <View style={{ flex: 0.7, justifyContent: 'center' }}>\r\n            <Text style={styles.answer}>Respuesta: {resultadoCorrecto}</Text>\r\n          </View>\r\n        )}\r\n\r\n        <View style={{ flex: 0.7, justifyContent: 'center' }}>\r\n          <Text style={styles.question}>\r\n            {tabla} x {numeroMultiplicado} =\r\n          </Text>\r\n        </View>\r\n        <View style={{ flex: 0.7 }}>\r\n          <TextInput\r\n            style={styles.input}\r\n            keyboardType=\"number-pad\"\r\n            value={respuestaUsuario}\r\n            onChangeText={(texto) => setRespuestaUsuario(texto.replace(',', '.'))}\r\n            placeholder=\"Respuesta\"\r\n            placeholderTextColor=\"#888\"\r\n          />\r\n        </View>\r\n        <View style={{ flex: 0.7 }}>\r\n          <Text\r\n            style={{\r\n              fontSize: 26,\r\n              textAlign: 'center',\r\n              fontFamily: 'Merriweather-Light',\r\n              color: colorComprobar,\r\n              marginTop: 10,\r\n            }}>\r\n            {textoComprobar}\r\n          </Text>\r\n        </View>\r\n        <View style={{ flex: 2 }}>\r\n          <Pressable onPress={() => verificarRespuesta()} style={styles.button}>\r\n            <Text style={styles.buttonText}>Comprobar</Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              setMostrarRespuesta(true);\r\n              setRacha(0);\r\n            }}\r\n            style={styles.button}>\r\n            <Text style={styles.buttonText}>Mostrar Respuesta</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n      <StreakCounter racha={racha} record={record} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  body: {\r\n    flex: 8,\r\n    alignItems: 'center',\r\n  },\r\n  paragraph: {\r\n    marginTop: 30,\r\n    fontSize: 30,\r\n    textAlign: 'center',\r\n    zIndex: 2,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  input: {\r\n    height: 60,\r\n    width: 200,\r\n    borderWidth: 2,\r\n    borderRadius: 8,\r\n    backgroundColor: 'white',\r\n    fontSize: 26,\r\n    textAlign: 'center',\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n  answer: {\r\n    fontSize: 28,\r\n    textAlign: 'center',\r\n    color: 'blue',\r\n    marginTop: 10,\r\n    fontFamily: 'Merriweather-Light',\r\n\r\n  },\r\n  question: {\r\n    fontSize: 30,\r\n    textAlign: 'center',\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n  button: {\r\n    backgroundColor: 'black',\r\n    width: 250,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 25,\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n});","import { createStackNavigator } from '@react-navigation/stack';\r\nimport SeleccionarTabla from './SeleccionarTabla';\r\nimport Tabla from './Tabla';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst TablasStack = () => (\r\n  <Stack.Navigator options=\"false\">\r\n    <Stack.Screen\r\n      name=\"SeleccionarTabla\"\r\n      component={SeleccionarTabla}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <Stack.Screen\r\n      name=\"Tabla\"\r\n      component={Tabla}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </Stack.Navigator>\r\n);\r\n\r\nexport default TablasStack;","import { useState, useEffect, useContext } from 'react';\r\n\r\nimport { Text, SafeAreaView, StyleSheet, View, Pressable } from 'react-native';\r\n\r\nimport { cargarDato, guardarDato } from '../../../metodos/StorageUtils';\r\nimport { cargarRecord } from '../../../metodos/cargarRecord';\r\nimport actualizarRecord from '../../../metodos/actualizarRecord';\r\n\r\nimport Contexto from '../../../metodos/Context';\r\nconst { Context } = Contexto;\r\n\r\nimport StreakCounter from '../../../components/StreakCounter';\r\nimport Header from '../../../components/Header';\r\nexport default function Zonas() {\r\n  const [numerosTercio, setNumerosTercio] = useState([\r\n    5, 8, 10, 11, 13, 16, 23, 24, 27, 30, 33, 36,\r\n  ]);\r\n  const [numerosHuerfanos, setNumerosHuerfanos] = useState([\r\n    1, 6, 9, 14, 17, 20, 31, 34,\r\n  ]);\r\n  const [numerosVecinosDel0, setNumerosVecinosDel0] = useState([\r\n    0, 2, 3, 4, 7, 12, 15, 18, 19, 21, 22, 25, 26, 28, 29, 32, 35,\r\n  ]);\r\n\r\n  const nombreRecord = 'RecordZonas';\r\n  const { informacionUsuario, online } = useContext(Context);\r\n\r\n  const [resultadoCorrecto, setResultadoCorrecto] = useState('');\r\n  const [numeroAleatorio, setNumeroAleatorio] = useState(0);\r\n  const [textoComprobar, setTextoComprobar] = useState('');\r\n  const [colorComprobar, setColorComprobar] = useState('');\r\n  const [racha, setRacha] = useState(0);\r\n  const [record, setRecord] = useState(0);\r\n\r\n  useEffect(() => {\r\n    generarNumero();\r\n    if (online) {\r\n      cargarRecord(informacionUsuario.token, nombreRecord, informacionUsuario.id_usuario, setRecord);\r\n    } else {\r\n      cargarDato(nombreRecord, setRecord)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (online) {\r\n      actualizarRecord(nombreRecord, informacionUsuario.id_usuario, record, informacionUsuario.token);\r\n    } else {\r\n      guardarDato(nombreRecord, record);\r\n    }\r\n  }, [record]);\r\n\r\n  const generarNumero = () => {\r\n    let numero = -1;\r\n    do {\r\n      numero = Math.floor(Math.random() * 37);\r\n    } while (numero == numeroAleatorio);\r\n    setNumeroAleatorio(numero);\r\n    let resultado = 'Vecinos del 0';\r\n    if (numerosTercio.includes(numero)) {\r\n      resultado = 'Tercio';\r\n    } else if (numerosHuerfanos.includes(numero)) {\r\n      resultado = 'Huerfanos';\r\n    }\r\n    setResultadoCorrecto(resultado);\r\n  };\r\n\r\n  const verificarRespuesta = (respuesta) => {\r\n    if (respuesta == resultadoCorrecto) {\r\n      setTextoComprobar('¡Correcto!');\r\n      setColorComprobar('green');\r\n      let rachaAvanza = racha + 1;\r\n\r\n      if (rachaAvanza > record) {\r\n        setRecord(rachaAvanza);\r\n      }\r\n\r\n      setRacha(rachaAvanza);\r\n      generarNumero();\r\n    } else {\r\n      setTextoComprobar('¡Incorrecto!');\r\n      setColorComprobar('red');\r\n\r\n      if (racha > record) {\r\n        setRecord(racha);\r\n      }\r\n      setRacha(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Header backVisible={false} />\r\n      <View style={styles.body}>\r\n        <View style={{ flex: 0.6, justifyContent: 'flex-end' }}>\r\n          <Text style={styles.paragraph}> Número: {numeroAleatorio} </Text>\r\n        </View>\r\n\r\n        <View style={{ flex: 0.6, justifyContent: 'center' }}>\r\n          <Text style={styles.question}>¿A qué zona pertenece?:</Text>\r\n        </View>\r\n\r\n        <View style={{ flex: 0.3 }}>\r\n          <Text\r\n            style={{\r\n              fontSize: 28,\r\n              textAlign: 'center',\r\n              color: colorComprobar,\r\n              fontFamily: 'Merriweather-Light',\r\n            }}>\r\n            {textoComprobar}\r\n          </Text>\r\n        </View>\r\n        <View style={{ flex: 2.5 }}>\r\n          <Pressable\r\n            onPress={() => verificarRespuesta('Tercio')}\r\n            style={styles.button}>\r\n            <Text style={styles.buttonText}>Tercio</Text>\r\n          </Pressable>\r\n\r\n          <Pressable\r\n            onPress={() => verificarRespuesta('Huerfanos')}\r\n            style={styles.button}>\r\n            <Text style={styles.buttonText}>Huérfanos</Text>\r\n          </Pressable>\r\n\r\n          <Pressable\r\n            onPress={() => verificarRespuesta('Vecinos del 0')}\r\n            style={styles.button}>\r\n            <Text style={styles.buttonText}>Vecinos del 0</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n      <StreakCounter racha={racha} record={record} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  body: {\r\n    flex: 8,\r\n    alignItems: 'center',\r\n  },\r\n  paragraph: {\r\n    fontSize: 35,\r\n    textAlign: 'center',\r\n    zIndex: 2,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  question: {\r\n    fontSize: 27,\r\n    textAlign: 'center',\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n  button: {\r\n    backgroundColor: 'black',\r\n    width: 250,\r\n    padding: 13,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 25,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 25,\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n});","import { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n  Text,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Pressable,\r\n  TextInput,\r\n  ScrollView,\r\n} from 'react-native';\r\n\r\nimport { cargarDato, guardarDato } from '../../../metodos/StorageUtils';\r\nimport { cargarRecord } from '../../../metodos/cargarRecord';\r\nimport actualizarRecord from '../../../metodos/actualizarRecord';\r\n\r\nimport Contexto from '../../../metodos/Context';\r\nconst { Context } = Contexto;\r\n\r\nimport StreakCounter from '../../../components/StreakCounter';\r\nimport Header from '../../../components/Header';\r\n\r\nexport default function Vecinos() {\r\n  const [secuenciaRuleta, setSecuenciaRuleta] = useState([\r\n    0, 32, 15, 19, 4, 21, 2, 25, 17, 34, 6, 27, 13, 36, 11, 30, 8, 23, 10, 5,\r\n    24, 16, 33, 1, 20, 14, 31, 9, 22, 18, 29, 7, 28, 12, 35, 3, 26,\r\n  ]);\r\n\r\n  const nombreRecord = 'RecordVecinos';\r\n  const { informacionUsuario, online } = useContext(Context);\r\n  const CORRECTO = 2;\r\n\r\n  const INCORRECTO = 1;\r\n  const SIN_INTENTO = 0;\r\n\r\n  const [resultadoCorrecto, setResultadoCorrecto] = useState([]);\r\n  const [vecinos, setVecinos] = useState([\r\n    { nombre: 'vecino1', valor: 0, correcto: SIN_INTENTO },\r\n    { nombre: 'vecino2', valor: 0, correcto: SIN_INTENTO },\r\n    { nombre: 'vecino3', valor: 0, correcto: SIN_INTENTO },\r\n    { nombre: 'vecino4', valor: 0, correcto: SIN_INTENTO },\r\n  ]);\r\n  const [numeroAleatorio, setNumeroAleatorio] = useState(0);\r\n  const [mostrarRespuesta, setMostrarRespuesta] = useState(false);\r\n\r\n  const [textoComprobar, setTextoComprobar] = useState('');\r\n  const [colorComprobar, setColorComprobar] = useState('');\r\n  const [racha, setRacha] = useState(0);\r\n  const [record, setRecord] = useState(0);\r\n\r\n  const generarNumero = () => {\r\n    let numero = -1;\r\n    do {\r\n      numero = Math.floor(Math.random() * 37);\r\n    } while (numero == numeroAleatorio);\r\n    setNumeroAleatorio(numero);\r\n    let resultado = calcularVecinos(numero);\r\n    setResultadoCorrecto(resultado);\r\n  };\r\n\r\n  useEffect(() => {\r\n    generarNumero();\r\n    if (online) {\r\n      cargarRecord(informacionUsuario.token, nombreRecord, informacionUsuario.id_usuario, setRecord);\r\n    } else {\r\n      cargarDato(nombreRecord, setRecord)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (online) {\r\n      actualizarRecord(nombreRecord, informacionUsuario.id_usuario, record, informacionUsuario.token);\r\n    } else {\r\n      guardarDato(nombreRecord, record);\r\n    }\r\n  }, [record]);\r\n\r\n  const calcularVecinos = (seleccionado) => {\r\n    const indice = secuenciaRuleta.indexOf(seleccionado);\r\n    const vecinos = [];\r\n\r\n    for (var i = 1; i <= 2; i++) {\r\n      var indiceIzquierda =\r\n        indice - i < 0 ? secuenciaRuleta.length + (indice - i) : indice - i;\r\n      vecinos.push(secuenciaRuleta[indiceIzquierda]);\r\n    }\r\n\r\n    for (var j = 1; j <= 2; j++) {\r\n      var indiceDerecha =\r\n        indice + j >= secuenciaRuleta.length\r\n          ? indice + j - secuenciaRuleta.length\r\n          : indice + j;\r\n      vecinos.push(secuenciaRuleta[indiceDerecha]);\r\n    }\r\n\r\n    vecinos.sort((a, b) => a - b);\r\n    return vecinos;\r\n  };\r\n\r\n  const borrarIncorrectos = () => {\r\n    const vecinitos = vecinos.map((value) => ({\r\n      ...value,\r\n      valor: value.correcto === INCORRECTO ? 0 : value.valor,\r\n      correcto: value.correcto === INCORRECTO ? SIN_INTENTO : value.correcto,\r\n    }));\r\n\r\n    setVecinos(vecinitos);\r\n  };\r\n\r\n  const manejarMostrarRespuesta = () => {\r\n    const nuevosVecinos = vecinos.map((vecino, index) => ({\r\n      ...vecino,\r\n      valor: vecino.correcto === CORRECTO ? vecino.valor : null,\r\n      correcto: vecino.correcto === CORRECTO ? CORRECTO : SIN_INTENTO,\r\n    }));\r\n\r\n    setVecinos(nuevosVecinos);\r\n    setMostrarRespuesta(true);\r\n    setRacha(0);\r\n  };\r\n\r\n  const verificarRespuesta = () => {\r\n    const nuevosVecinos = [...vecinos];\r\n\r\n    const vecinosReordenados = Array(4).fill(null);\r\n    const resultadoOrdenado = [...resultadoCorrecto].sort((a, b) => a - b);\r\n\r\n    nuevosVecinos.forEach((v) => {\r\n      v.correcto = INCORRECTO;\r\n    });\r\n\r\n    for (let i = 0; i < resultadoCorrecto.length; i++) {\r\n      const valorCorrecto = resultadoCorrecto[i];\r\n      const vecinoIndex = nuevosVecinos.findIndex(\r\n        (v) => v.valor === valorCorrecto && v.correcto !== CORRECTO\r\n      );\r\n\r\n      if (vecinoIndex !== -1) {\r\n        vecinosReordenados[i] = {\r\n          ...nuevosVecinos[vecinoIndex],\r\n          correcto: CORRECTO,\r\n        };\r\n        nuevosVecinos[vecinoIndex].correcto = CORRECTO;\r\n      }\r\n    }\r\n\r\n    let vecinoIndex = 0;\r\n    for (let i = 0; i < vecinosReordenados.length; i++) {\r\n      if (vecinosReordenados[i] === null) {\r\n        while (\r\n          vecinoIndex < nuevosVecinos.length &&\r\n          nuevosVecinos[vecinoIndex].correcto === CORRECTO\r\n        ) {\r\n          vecinoIndex++;\r\n        }\r\n        if (vecinoIndex < nuevosVecinos.length) {\r\n          vecinosReordenados[i] = {\r\n            ...nuevosVecinos[vecinoIndex],\r\n            correcto: INCORRECTO,\r\n          };\r\n          vecinoIndex++;\r\n        } else {\r\n          vecinosReordenados[i] = {\r\n            nombre: `vecino${i + 1}`,\r\n            valor: 0,\r\n            correcto: INCORRECTO,\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    setVecinos(vecinosReordenados);\r\n\r\n    const todosCorrectos = vecinosReordenados.every(\r\n      (v, i) => v.valor === resultadoCorrecto[i]\r\n    );\r\n\r\n    if (todosCorrectos) {\r\n      setMostrarRespuesta(false);\r\n      setTextoComprobar('¡Correcto!');\r\n      setColorComprobar('green');\r\n\r\n      const nuevaRacha = racha + 1;\r\n      if (nuevaRacha > record) {\r\n        setRecord(nuevaRacha);\r\n      }\r\n      setRacha(nuevaRacha);\r\n\r\n      setVecinos([\r\n        { nombre: 'vecino1', valor: 0, correcto: SIN_INTENTO },\r\n        { nombre: 'vecino2', valor: 0, correcto: SIN_INTENTO },\r\n        { nombre: 'vecino3', valor: 0, correcto: SIN_INTENTO },\r\n        { nombre: 'vecino4', valor: 0, correcto: SIN_INTENTO },\r\n      ]);\r\n      generarNumero();\r\n    } else {\r\n      setTextoComprobar('¡Incorrecto!');\r\n      setColorComprobar('red');\r\n\r\n      if (racha > record) {\r\n        setRecord(racha);\r\n      }\r\n      setRacha(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      contentContainerStyle={styles.scrollContainer}\r\n      keyboardShouldPersistTaps=\"handled\"\r\n      keyboardDismissMode=\"on-drag\">\r\n      <SafeAreaView style={styles.container}>\r\n        <Header backVisible={false} />\r\n        <View style={styles.body}>\r\n          <View style={{ flex: 0.5, justifyContent: 'flex-end' }}>\r\n            <Text style={styles.paragraph}>\r\n              Introduce los vecinos del: {numeroAleatorio}\r\n            </Text>\r\n          </View>\r\n\r\n          <View\r\n            style={{\r\n              flex: 0.7,\r\n              flexDirection: 'row',\r\n              justifyContent: 'center',\r\n              alignItems: 'flex-end',\r\n            }}>\r\n            {vecinos.map((vecino, index) => (\r\n              <TextInput\r\n                key={index}\r\n                style={styles.input}\r\n                keyboardType=\"number-pad\"\r\n                value={vecino.valor !== null ? vecino.valor.toString() : ''}\r\n                maxLength={2}\r\n                onChangeText={(text) => {\r\n                  const nuevosVecinos = [...vecinos];\r\n                  nuevosVecinos[index].valor = text ? parseInt(text) : null;\r\n                  setVecinos(nuevosVecinos);\r\n                }}\r\n                editable={vecino.correcto !== CORRECTO}\r\n                backgroundColor={\r\n                  vecino.correcto === INCORRECTO\r\n                    ? 'red'\r\n                    : vecino.correcto === CORRECTO\r\n                      ? 'green'\r\n                      : 'black'\r\n                }\r\n                placeholderTextColor=\"gray\"\r\n                placeholder={\r\n                  mostrarRespuesta && vecino.valor === null\r\n                    ? resultadoCorrecto[index].toString()\r\n                    : ''\r\n                }\r\n              />\r\n            ))}\r\n          </View>\r\n          <View style={{ flex: 0.3, justifyContent: 'flex-end' }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 28,\r\n                textAlign: 'center',\r\n                color: colorComprobar,\r\n              }}>\r\n              {textoComprobar}\r\n            </Text>\r\n          </View>\r\n          <View style={{ flex: 1.4 }}>\r\n            <Pressable\r\n              onPress={() => verificarRespuesta()}\r\n              style={styles.button}>\r\n              <Text style={styles.buttonText}>Comprobar</Text>\r\n            </Pressable>\r\n\r\n            <Pressable\r\n              onPress={() => borrarIncorrectos()}\r\n              style={styles.button}>\r\n              <Text style={styles.buttonText}>Borrar Incorrectos</Text>\r\n            </Pressable>\r\n\r\n            <Pressable\r\n              onPress={() => manejarMostrarRespuesta()}\r\n              style={styles.button}>\r\n              <Text style={styles.buttonText}>Mostrar Respuesta</Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n        <StreakCounter racha={racha} record={record} />\r\n      </SafeAreaView>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  body: {\r\n    flex: 8,\r\n    alignItems: 'center',\r\n  },\r\n  paragraph: {\r\n    fontSize: 33,\r\n    textAlign: 'center',\r\n    zIndex: 2,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  button: {\r\n    backgroundColor: 'black',\r\n    width: 250,\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 25,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 25,\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n  input: {\r\n    backgroundColor: 'black',\r\n    margin: 5,\r\n    width: 80,\r\n    height: 80,\r\n    borderRadius: 15,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'white',\r\n    fontSize: 25,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  scrollContainer: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#fcfcfc',\r\n    flexGrow: 1,\r\n  },\r\n});","export const nombreAleatorio = (numeroAleatorio) => {\r\n  let nom = '';\r\n\r\n  switch (numeroAleatorio) {\r\n    case 0:\r\n      nom = 'Sandro';\r\n      break;\r\n    case 1:\r\n      nom = 'Rafa';\r\n      break;\r\n    case 2:\r\n      nom = 'Verzo';\r\n      break;\r\n    case 3:\r\n      nom = 'Laura';\r\n      break;\r\n    case 4:\r\n      nom = 'Goyo';\r\n      break;\r\n    default:\r\n      nom = 'Sandro';\r\n      break;\r\n  }\r\n\r\n  return nom;\r\n};\r\n\r\nexport const comprobarEmoji = (nombre) => {\r\n  let emoji = '';\r\n\r\n  switch (nombre) {\r\n    case 'Sandro':\r\n      emoji = '😝';\r\n      break;\r\n    case 'Rafa':\r\n      emoji = '🫨';\r\n      break;\r\n    case 'Verzo':\r\n      emoji = '😎';\r\n      break;\r\n    case 'Laura':\r\n      emoji = '🫣';\r\n      break;\r\n    case 'Goyo':\r\n      emoji = '🐻‍❄️';\r\n      break;\r\n    default:\r\n      emoji = 'Sandro';\r\n      break;\r\n  }\r\n\r\n  return emoji;\r\n};\r\n\r\nexport const getRandomInt = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nexport const devolverMensaje = (nombre, tiempo) => {\r\n  let mensaje = 'Bien hecho';\r\n  switch (nombre) {\r\n    case 'Sandro':\r\n      if (tiempo < 140) {\r\n        mensaje = 'INCREIBLE HERMAN@ 🗣🔥, mereces un ascenso';\r\n      } else if (tiempo < 190) {\r\n        mensaje = 'Muy bien hecho, aunque sé que lo puedes hacer mejor 😎';\r\n      } else if (tiempo < 240) {\r\n        mensaje = 'Bien, pero los he visto más rápidos. 🐌';\r\n      } else {\r\n        mensaje = 'No está mal, pero quiero irme antes de las 05:00 💀';\r\n      }\r\n      break;\r\n    case 'Rafa':\r\n      if (tiempo < 140) {\r\n        mensaje = 'Muy bien, muy bien hecho, demasiado bien... 🐧';\r\n      } else if (tiempo < 190) {\r\n        mensaje = 'Bastante rápido, pero muñones lo es más 🤐';\r\n      } else if (tiempo < 240) {\r\n        mensaje = 'Nivel estándar por lo que veo...';\r\n      } else {\r\n        mensaje = 'Un poco más y me jubilo antes de que acabes, eh 😒';\r\n      }\r\n      break;\r\n    case 'Verzo':\r\n      if (tiempo < 140) {\r\n        mensaje = 'Jolines que rápido, puedes irte ya a casa 😊';\r\n      } else if (tiempo < 190) {\r\n        mensaje = 'Rápido y conciso, aunque puedes mejorar un poco 🙂';\r\n      } else if (tiempo < 240) {\r\n        mensaje = 'Aprendes rápido, práctica más y serás veloz 🥳';\r\n      } else {\r\n        mensaje = 'Está bien, pero hay que darle un poco al acelerador 😓';\r\n      }\r\n      break;\r\n    case 'Laura':\r\n      if (tiempo < 140) {\r\n        mensaje =\r\n          '¡Lo has hecho muy rápido! Ahora tienes más tiempo para hacer cartas 😁';\r\n      } else if (tiempo < 190) {\r\n        mensaje =\r\n          'Si hubiera un top 3, estarías en la segunda posición, muy bien. 😌';\r\n      } else if (tiempo < 240) {\r\n        mensaje = 'Bien, aunque vas un poco chafando huevos 🐔';\r\n      } else {\r\n        mensaje = 'No está mal, ya lo harás más rápido a la próxima 😅';\r\n      }\r\n      break;\r\n    case 'Goyo':\r\n      if (tiempo < 140) {\r\n        mensaje = '¡Excelente, tú ser el guerrero del Dragón! 🐻‍❄️';\r\n      } else if (tiempo < 190) {\r\n        mensaje = 'Muy bien, tú ser el escudero del Dragón 🐻‍❄️';\r\n      } else if (tiempo < 240) {\r\n        mensaje = 'Bien, tú ser aprendiz del Dragón 🐻‍❄️';\r\n      } else {\r\n        mensaje = 'Tú no ser el guerrero del Dragón... 🐻‍❄️';\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return mensaje;\r\n};\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  TextInput,\r\n  Pressable,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Alert,\r\n} from 'react-native';\r\n\r\nimport {\r\n  nombreAleatorio,\r\n  comprobarEmoji,\r\n  getRandomInt,\r\n  devolverMensaje,\r\n} from '../../../metodos/UtilsCierre';\r\n\r\nimport { cargarDato, guardarDato } from '../../../metodos/StorageUtils';\r\n\r\nimport { cargarRecord } from '../../../metodos/cargarRecord';\r\nimport actualizarRecord from '../../../metodos/actualizarRecord';\r\n\r\nimport Contexto from '../../../metodos/Context';\r\nconst { Context } = Contexto;\r\n\r\nimport Header from '../../../components/Header';\r\n\r\nconst Cierre = () => {\r\n\r\n  const [numeroAleatorio, setNumeroAleatorio] = useState(0);\r\n  const [nombre, setNombre] = useState(nombreAleatorio(0));\r\n  const [emoji, setEmoji] = useState(comprobarEmoji('Sandro'));\r\n\r\n  const nombreRecord = 'RecordCierre';\r\n  const { informacionUsuario, online } = useContext(Context);\r\n\r\n  const [tiempo, setTiempo] = useState(0);\r\n  const [corriendo, setCorriendo] = useState(true);\r\n  const [valoresIntroducidos, setValoresIntroducidos] = useState({});\r\n  const [respuestaTotal, setRespuestaTotal] = useState(0);\r\n  const [bordes, setBordes] = useState({});\r\n  const [tiempoPersonal, setTiempoPersonal] = useState(0);\r\n\r\n  const [fichas, setFichas] = useState([\r\n    { valor: 10000, cantidad: getRandomInt(0, 5) },\r\n    { valor: 500, cantidad: getRandomInt(5, 40) },\r\n    { valor: 100, cantidad: getRandomInt(15, 65) },\r\n    { valor: 50, cantidad: getRandomInt(30, 100) },\r\n    { valor: 25, cantidad: getRandomInt(30, 100) },\r\n    { valor: 10, cantidad: getRandomInt(40, 80) },\r\n    { valor: 5, cantidad: getRandomInt(60, 250) },\r\n    { valor: 2.5, cantidad: getRandomInt(60, 250) },\r\n    { valor: 1.25, cantidad: getRandomInt(8, 30) },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (online) {\r\n      cargarRecord(informacionUsuario.token, nombreRecord, informacionUsuario.id_usuario, setTiempoPersonal);\r\n    } else {\r\n      cargarDato(nombreRecord, setTiempoPersonal)\r\n    }\r\n  }, [nombre]);\r\n\r\n  useEffect(() => {\r\n    let intervalo;\r\n    if (corriendo) {\r\n      intervalo = setInterval(() => setTiempo((prev) => prev + 1), 1000);\r\n    }\r\n    return () => clearInterval(intervalo);\r\n  }, [corriendo]);\r\n\r\n  const formatearTiempo = (segundos) => {\r\n    const min = Math.floor(segundos / 60)\r\n      .toString()\r\n      .padStart(2, '0');\r\n    const sec = (segundos % 60).toString().padStart(2, '0');\r\n    return `${min}:${sec}`;\r\n  };\r\n\r\n  const total = fichas.reduce(\r\n    (acc, ficha) => acc + ficha.valor * ficha.cantidad,\r\n    0\r\n  );\r\n\r\n  const reiniciar = () => {\r\n    let nuevoNombre = -1;\r\n    do {\r\n      nuevoNombre = getRandomInt(0, 4);\r\n    } while (nuevoNombre == numeroAleatorio);\r\n    let nom = nombreAleatorio(nuevoNombre);\r\n    setNumeroAleatorio(nuevoNombre);\r\n    setNombre(nom);\r\n    setEmoji(comprobarEmoji(nom));\r\n    setTiempo(0);\r\n    setCorriendo(true);\r\n    setRespuestaTotal(0);\r\n    setValoresIntroducidos({});\r\n    setBordes({});\r\n    setFichas([\r\n      { valor: 10000, cantidad: getRandomInt(1, 5) },\r\n      { valor: 500, cantidad: getRandomInt(5, 40) },\r\n      { valor: 100, cantidad: getRandomInt(15, 65) },\r\n      { valor: 50, cantidad: getRandomInt(30, 100) },\r\n      { valor: 25, cantidad: getRandomInt(30, 100) },\r\n      { valor: 10, cantidad: getRandomInt(40, 80) },\r\n      { valor: 5, cantidad: getRandomInt(60, 250) },\r\n      { valor: 2.5, cantidad: getRandomInt(60, 250) },\r\n      { valor: 1.25, cantidad: getRandomInt(8, 30) },\r\n    ]);\r\n  };\r\n\r\n  const mostrarRespuestas = () => {\r\n    let respuestas = {};\r\n    let totalRespuesta = 0;\r\n\r\n    fichas.forEach((ficha) => {\r\n      const respuestaCorrecta = (ficha.valor * ficha.cantidad).toFixed(2);\r\n      respuestas[ficha.valor] = respuestaCorrecta;\r\n      totalRespuesta += parseFloat(respuestaCorrecta);\r\n    });\r\n\r\n    setValoresIntroducidos(respuestas);\r\n    setTiempo(900);\r\n    setRespuestaTotal(total.toFixed(2));\r\n  };\r\n\r\n  const comprobarRespuestas = () => {\r\n    let todasCorrectas = true;\r\n    let nuevosBordes = {};\r\n\r\n    fichas.forEach((ficha) => {\r\n      const valorIntroducido =\r\n        parseFloat(valoresIntroducidos[ficha.valor]) || 0;\r\n      const valorCorrecto = ficha.valor * ficha.cantidad;\r\n\r\n      if (valorIntroducido == valorCorrecto) {\r\n        nuevosBordes[ficha.valor] = 'green';\r\n      } else {\r\n        nuevosBordes[ficha.valor] = 'red';\r\n        todasCorrectas = false;\r\n      }\r\n    });\r\n\r\n    if (respuestaTotal == total) {\r\n      nuevosBordes['total'] = 'green';\r\n    } else {\r\n      nuevosBordes['total'] = 'red';\r\n      todasCorrectas = false;\r\n    }\r\n\r\n    setBordes(nuevosBordes);\r\n\r\n    if (todasCorrectas && respuestaTotal == total) {\r\n      if (tiempoPersonal > tiempo || tiempoPersonal == 0) {\r\n        if (online) {\r\n          actualizarRecord(nombreRecord, informacionUsuario.id_usuario, tiempo, informacionUsuario.token);\r\n        } else {\r\n          guardarDato(nombreRecord, tiempo);\r\n        }\r\n      }\r\n      let message = devolverMensaje(nombre, tiempo);\r\n      setCorriendo(false);\r\n      Alert.alert(nombre + ' dice:', message);\r\n    } else {\r\n      Alert.alert('Error', 'Revisa los campos en rojo');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView style={styles.scrollContainer}>\r\n        <Header backVisible={false} />\r\n        <View style={{ flex: 1, justifyContent: 'flex-end' }}>\r\n          <Text style={styles.mensaje}>\r\n            {nombre} dice que cierres la AMERICANA 2 {emoji}:\r\n          </Text>\r\n        </View>\r\n        <View style={{ flex: 1, flexDirection: \"row\" }}>\r\n          <View style={{ flex: 1 }}>\r\n            <View style={{ flex: 1, justifyContent: 'center' }}>\r\n              <Text style={styles.tiempo}>Tiempo:</Text>\r\n            </View>\r\n            <View\r\n              style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\r\n              <Text style={styles.reloj}>{formatearTiempo(tiempo)}</Text>\r\n            </View>\r\n          </View>\r\n\r\n          <View style={{ flex: 1 }}>\r\n            <View style={{ flex: 1, justifyContent: 'center' }}>\r\n              <Text style={styles.tiempoRecord}>\r\n                Récord personal:\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\r\n              <Text style={styles.relojRecord}>\r\n                {formatearTiempo(tiempoPersonal)}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        <View style={styles.table}>\r\n          <View style={styles.headerRow}>\r\n            <Text style={styles.headerCell}>Tipo Ficha</Text>\r\n            <Text style={styles.headerCell}>Cantidad</Text>\r\n            <Text style={styles.headerCellInput}>Introducido</Text>\r\n          </View>\r\n          <FlatList\r\n            scrollEnabled={false}\r\n            data={fichas}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            renderItem={({ item }) => (\r\n              <View style={styles.row}>\r\n                <Text style={styles.cell}>{item.valor}</Text>\r\n                <Text style={styles.cell}>{item.cantidad}</Text>\r\n                <View style={styles.inputContainer}>\r\n                  <TextInput\r\n                    style={[\r\n                      styles.input,\r\n                      { borderColor: bordes[item.valor] || '#000' },\r\n                    ]}\r\n                    keyboardType=\"number-pad\"\r\n                    placeholderTextColor=\"#888\"\r\n                    value={valoresIntroducidos[item.valor] || ''}\r\n                    onChangeText={(text) =>\r\n                      setValoresIntroducidos((prev) => ({\r\n                        ...prev,\r\n                        [item.valor]: text.replace(',', '.'),\r\n                      }))\r\n                    }\r\n                    placeholder=\"0.00\"\r\n                  />\r\n                </View>\r\n              </View>\r\n            )}\r\n          />\r\n          <View style={styles.footerRow}>\r\n            <Text style={styles.footerCell}>Total:</Text>\r\n            <View style={styles.inputContainer}>\r\n              <TextInput\r\n                style={[\r\n                  styles.input,\r\n                  { borderColor: bordes['total'] || '#000' },\r\n                ]}\r\n                keyboardType=\"numeric\"\r\n                value={respuestaTotal}\r\n                onChangeText={(respuestaTotal) =>\r\n                  setRespuestaTotal(respuestaTotal)\r\n                }\r\n                placeholder=\"0.00\"\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            alignItems: 'center',\r\n            padding: 10,\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-around',\r\n          }}>\r\n          <Pressable style={styles.button} onPress={reiniciar}>\r\n            <Text style={styles.buttonText}>Reiniciar</Text>\r\n          </Pressable>\r\n          <Pressable style={styles.button} onPress={mostrarRespuestas}>\r\n            <Text style={styles.buttonText}>Respuestas</Text>\r\n          </Pressable>\r\n          <Pressable style={styles.button} onPress={comprobarRespuestas}>\r\n            <Text style={styles.buttonText}>Comprobar</Text>\r\n          </Pressable>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n  },\r\n  mensaje: {\r\n    fontSize: 25, textAlign: 'center', padding: 8, fontFamily: 'Merriweather-Light',\r\n  },\r\n  tiempo: {\r\n    fontSize: 20, color: 'blue', textAlign: 'center', fontFamily: 'Merriweather-Light',\r\n  },\r\n  reloj: {\r\n    fontSize: 24,\r\n    color: 'blue',\r\n    textAlign: 'center',\r\n    padding: 2,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n\r\n  },\r\n  tiempoRecord: {\r\n    fontSize: 20, color: 'red', textAlign: 'center', fontFamily: 'Merriweather-Light',\r\n  },\r\n  relojRecord: {\r\n    fontSize: 24,\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    padding: 2,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  table: {\r\n    width: '90%',\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    borderColor: 'black',\r\n    marginTop: 5,\r\n    alignSelf: 'center',\r\n  },\r\n  headerRow: { flexDirection: 'row', backgroundColor: '#ddd', padding: 10 },\r\n  headerCell: {\r\n    flex: 0.5, fontFamily: 'Merriweather-SemiBold', fontSize: 17,\r\n    textAlign: 'center'\r\n  },\r\n  headerCellInput: { flex: 1, fontFamily: 'Merriweather-SemiBold', textAlign: 'center', fontSize: 17, },\r\n  row: {\r\n    flexDirection: 'row',\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n    alignItems: 'center',\r\n  },\r\n  cell: { flex: 0.5, textAlign: 'center', fontFamily: 'Merriweather-Light', fontSize: 21 },\r\n  footerRow: { flexDirection: 'row', padding: 10, backgroundColor: '#eee' },\r\n  footerCell: { flex: 1, textAlign: 'center', fontFamily: 'Merriweather-SemiBold', fontSize: 24 },\r\n  inputContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    fontSize: 22,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n    borderWidth: 1,\r\n    borderColor: '#000',\r\n    padding: 2,\r\n    width: '80%',\r\n    textAlign: 'center',\r\n  },\r\n  button: {\r\n    backgroundColor: 'black',\r\n    width: 112,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: { color: 'white', fontSize: 16, fontFamily: 'Merriweather-Light', },\r\n  scrollContainer: {\r\n    flex: 1,\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n});\r\n\r\nexport default Cierre;","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport Tablas from './Tablas/TablasStack';\r\nimport Zonas from './Zonas/Zonas';\r\nimport Vecinos from './Vecinos/Vecinos';\r\nimport Cierre from './Cierre/Cierre';\r\n\r\nconst Tab_Ruleta = createBottomTabNavigator();\r\n\r\nconst App = () => (\r\n  <Tab_Ruleta.Navigator\r\n    screenOptions={({ route }) => ({\r\n      tabBarStyle: {\r\n        backgroundColor: 'black',\r\n        borderTopWidth: 0,\r\n        height: 70,\r\n        justifyContent: 'center',\r\n      },\r\n      tabBarInactiveBackgroundColor: '#2f2f2f',\r\n      tabBarActiveBackgroundColor: 'black',\r\n      tabBarInactiveTintColor: 'white',\r\n      tabBarActiveTintColor: '#FFFFFF',\r\n      tabBarLabelStyle: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        textAlignVertical: 'center',\r\n      },\r\n      headerShown: false,\r\n      tabBarIcon: ({ color, size }) => {\r\n        let iconName;\r\n        switch (route.name) {\r\n          case 'Tablas':\r\n            iconName = 'grid-outline';\r\n            break;\r\n          case 'Zonas':\r\n            iconName = 'map-outline';\r\n            break;\r\n          case 'Vecinos':\r\n            iconName = 'people-outline';\r\n            break;\r\n          case 'Cierre':\r\n            iconName = 'lock-closed-outline';\r\n            break;\r\n          default:\r\n            iconName = 'help-circle-outline';\r\n        }\r\n        return <Ionicons name={iconName} size={size} color={color} />;\r\n      },\r\n    })}>\r\n    <Tab_Ruleta.Screen name=\"Tablas\" component={Tablas} />\r\n    <Tab_Ruleta.Screen name=\"Zonas\" component={Zonas} />\r\n    <Tab_Ruleta.Screen name=\"Vecinos\" component={Vecinos} />\r\n    <Tab_Ruleta.Screen name=\"Cierre\" component={Cierre} />\r\n  </Tab_Ruleta.Navigator>\r\n);\r\n\r\nexport default App;","import { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n  Text,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Pressable,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n} from 'react-native';\r\n\r\nimport { cargarDato, guardarDato } from '../../metodos/StorageUtils';\r\nimport { cargarRecord } from '../../metodos/cargarRecord';\r\nimport StreakCounter from '../../components/StreakCounter';\r\nimport Header from '../../components/Header';\r\n\r\nimport actualizarRecord from '../../metodos/actualizarRecord';\r\n\r\nimport Contexto from '../../metodos/Context';\r\nconst { Context } = Contexto;\r\n\r\nexport default function BlackJackPaga() {\r\n\r\n  const nombreRecord = \"RecordBlackjackPaga\";\r\n  const { informacionUsuario, online } = useContext(Context);\r\n\r\n  const [resultadoCorrecto, setResultadoCorrecto] = useState(0);\r\n  const [numeroMultiplicado, setNumeroMultiplicado] = useState(0);\r\n  const [respuestaUsuario, setRespuestaUsuario] = useState(0);\r\n  const [textoComprobar, setTextoComprobar] = useState('');\r\n  const [colorComprobar, setColorComprobar] = useState('');\r\n  const [mostrarRespuesta, setMostrarRespuesta] = useState(false);\r\n  const [racha, setRacha] = useState(0);\r\n  const [record, setRecord] = useState(0);\r\n\r\n  useEffect(() => {\r\n    generarMultiplicacion();\r\n    if (online) {\r\n      cargarRecord(informacionUsuario.token, nombreRecord, informacionUsuario.id_usuario, setRecord);\r\n    } else {\r\n      cargarDato(nombreRecord, setRecord)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (online) {\r\n      actualizarRecord(nombreRecord, informacionUsuario.id_usuario, record, informacionUsuario.token);\r\n    } else {\r\n      guardarDato(nombreRecord, record);\r\n    }\r\n  }, [record]);\r\n\r\n  const generarMultiplicacion = () => {\r\n    let multiplicador = -1;\r\n    do {\r\n      multiplicador = (Math.floor(Math.random() * 50) + 1) * 10;\r\n    } while (numeroMultiplicado == multiplicador);\r\n    const resultado = 1.5 * multiplicador;\r\n    setNumeroMultiplicado(multiplicador);\r\n    setResultadoCorrecto(resultado);\r\n  };\r\n\r\n  const verificarRespuesta = () => {\r\n    if (respuestaUsuario == resultadoCorrecto) {\r\n      setRespuestaUsuario(0);\r\n      setMostrarRespuesta(false);\r\n      setTextoComprobar('¡Correcto!');\r\n      setColorComprobar('green');\r\n      let rachaAvanza = racha + 1;\r\n\r\n      if (rachaAvanza > record) {\r\n        setRecord(rachaAvanza);\r\n      }\r\n\r\n      setRacha(rachaAvanza);\r\n      generarMultiplicacion();\r\n    } else {\r\n      setTextoComprobar('¡Incorrecto!');\r\n      setColorComprobar('red');\r\n\r\n      if (racha > record) {\r\n        setRecord(racha);\r\n      }\r\n      setRacha(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        style={{ flex: 1 }}>\r\n        <Header backVisible={false} />\r\n        <View style={styles.body}>\r\n          <View style={{ flex: 1.3, justifyContent: \"center\" }}>\r\n            <Text style={styles.paragraph}> BLACKJACK PAGA 3:2 </Text>\r\n          </View>\r\n          {mostrarRespuesta && (\r\n            <View style={{ flex: 0.6 }}>\r\n              <Text style={styles.answer}>Respuesta: {resultadoCorrecto}</Text>\r\n            </View>\r\n          )}\r\n\r\n          <View style={{ flex: 0.6 }}>\r\n            <Text style={styles.question}>\r\n              BlackJack de {numeroMultiplicado} paga:\r\n            </Text>\r\n          </View>\r\n          <View style={{ flex: 0.7 }}>\r\n            <TextInput\r\n              style={styles.input}\r\n              keyboardType=\"number-pad\"\r\n              value={respuestaUsuario}\r\n              onChangeText={setRespuestaUsuario}\r\n              placeholder=\"Respuesta\"\r\n              placeholderTextColor=\"#888\"\r\n            />\r\n          </View>\r\n          <View style={{ flex: 0.4 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 25,\r\n                fontFamily: 'Merriweather-Light',\r\n                textAlign: 'center',\r\n                color: colorComprobar,\r\n              }}>\r\n              {textoComprobar}\r\n            </Text>\r\n          </View>\r\n          <View style={{ flex: 2 }}>\r\n            <Pressable\r\n              onPress={() => verificarRespuesta()}\r\n              style={styles.button}>\r\n              <Text style={styles.buttonText}>Comprobar</Text>\r\n            </Pressable>\r\n\r\n            <Pressable\r\n              onPress={() => {\r\n                setMostrarRespuesta(true), setRacha(0);\r\n              }}\r\n              style={styles.button}>\r\n              <Text style={styles.buttonText}>Mostrar Respuesta</Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n        <StreakCounter racha={racha} record={record} />\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  body: {\r\n    flex: 8,\r\n    alignItems: 'center',\r\n  },\r\n  paragraph: {\r\n    fontSize: 30,\r\n    textAlign: 'center',\r\n    zIndex: 2,\r\n    justifyContent: \"flex-end\",\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  input: {\r\n    height: 60,\r\n    width: 200,\r\n    borderWidth: 2,\r\n    borderRadius: 8,\r\n    backgroundColor: 'white',\r\n    fontSize: 27,\r\n    textAlign: 'center',\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n  answer: {\r\n    fontSize: 28,\r\n    textAlign: 'center',\r\n    color: 'blue',\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n  question: {\r\n    fontSize: 28,\r\n    textAlign: 'center',\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n  button: {\r\n    backgroundColor: 'black',\r\n    width: 250,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 25,\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n});","const IMAGENES_CARTAS = {\r\n  \"1S\": require(\"../assets/cartasBlackJack/1S.png\"),\r\n  \"2S\": require(\"../assets/cartasBlackJack/2S.png\"),\r\n  \"3S\": require(\"../assets/cartasBlackJack/3S.png\"),\r\n  \"4S\": require(\"../assets/cartasBlackJack/4S.png\"),\r\n  \"5S\": require(\"../assets/cartasBlackJack/5S.png\"),\r\n  \"6S\": require(\"../assets/cartasBlackJack/6S.png\"),\r\n  \"7S\": require(\"../assets/cartasBlackJack/7S.png\"),\r\n  \"8S\": require(\"../assets/cartasBlackJack/8S.png\"),\r\n  \"9S\": require(\"../assets/cartasBlackJack/9S.png\"),\r\n  \"10S\": require(\"../assets/cartasBlackJack/10S.png\"),\r\n  \"11S\": require(\"../assets/cartasBlackJack/11S.png\"),\r\n  \"12S\": require(\"../assets/cartasBlackJack/12S.png\"),\r\n  \"13S\": require(\"../assets/cartasBlackJack/13S.png\"),\r\n  \"1H\": require(\"../assets/cartasBlackJack/1H.png\"),\r\n  \"2H\": require(\"../assets/cartasBlackJack/2H.png\"),\r\n  \"3H\": require(\"../assets/cartasBlackJack/3H.png\"),\r\n  \"4H\": require(\"../assets/cartasBlackJack/4H.png\"),\r\n  \"5H\": require(\"../assets/cartasBlackJack/5H.png\"),\r\n  \"6H\": require(\"../assets/cartasBlackJack/6H.png\"),\r\n  \"7H\": require(\"../assets/cartasBlackJack/7H.png\"),\r\n  \"8H\": require(\"../assets/cartasBlackJack/8H.png\"),\r\n  \"9H\": require(\"../assets/cartasBlackJack/9H.png\"),\r\n  \"10H\": require(\"../assets/cartasBlackJack/10H.png\"),\r\n  \"11H\": require(\"../assets/cartasBlackJack/11H.png\"),\r\n  \"12H\": require(\"../assets/cartasBlackJack/12H.png\"),\r\n  \"13H\": require(\"../assets/cartasBlackJack/13H.png\"),\r\n  \"1D\": require(\"../assets/cartasBlackJack/1D.png\"),\r\n  \"2D\": require(\"../assets/cartasBlackJack/2D.png\"),\r\n  \"3D\": require(\"../assets/cartasBlackJack/3D.png\"),\r\n  \"4D\": require(\"../assets/cartasBlackJack/4D.png\"),\r\n  \"5D\": require(\"../assets/cartasBlackJack/5D.png\"),\r\n  \"6D\": require(\"../assets/cartasBlackJack/6D.png\"),\r\n  \"7D\": require(\"../assets/cartasBlackJack/7D.png\"),\r\n  \"8D\": require(\"../assets/cartasBlackJack/8D.png\"),\r\n  \"9D\": require(\"../assets/cartasBlackJack/9D.png\"),\r\n  \"10D\": require(\"../assets/cartasBlackJack/10D.png\"),\r\n  \"11D\": require(\"../assets/cartasBlackJack/11D.png\"),\r\n  \"12D\": require(\"../assets/cartasBlackJack/12D.png\"),\r\n  \"13D\": require(\"../assets/cartasBlackJack/13D.png\"),\r\n  \"1C\": require(\"../assets/cartasBlackJack/1C.png\"),\r\n  \"2C\": require(\"../assets/cartasBlackJack/2C.png\"),\r\n  \"3C\": require(\"../assets/cartasBlackJack/3C.png\"),\r\n  \"4C\": require(\"../assets/cartasBlackJack/4C.png\"),\r\n  \"5C\": require(\"../assets/cartasBlackJack/5C.png\"),\r\n  \"6C\": require(\"../assets/cartasBlackJack/6C.png\"),\r\n  \"7C\": require(\"../assets/cartasBlackJack/7C.png\"),\r\n  \"8C\": require(\"../assets/cartasBlackJack/8C.png\"),\r\n  \"9C\": require(\"../assets/cartasBlackJack/9C.png\"),\r\n  \"10C\": require(\"../assets/cartasBlackJack/10C.png\"),\r\n  \"11C\": require(\"../assets/cartasBlackJack/11C.png\"),\r\n  \"12C\": require(\"../assets/cartasBlackJack/12C.png\"),\r\n  \"13C\": require(\"../assets/cartasBlackJack/13C.png\"),\r\n};\r\n\r\nexport default IMAGENES_CARTAS;","import { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Text,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  Pressable,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  Alert,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport { cargarDato, guardarDato } from '../../metodos/StorageUtils';\r\nimport { cargarRecord } from '../../metodos/cargarRecord';\r\n\r\nimport StreakCounter from '../../components/StreakCounter';\r\nimport Header from '../../components/Header';\r\nimport IMAGENES_CARTAS from '../../metodos/cargarImagenes';\r\n\r\nconst palos = ['S', 'H', 'D', 'C'];\r\n\r\nclass Carta {\r\n  constructor(valor, palo) {\r\n    this.valor = valor == 1 ? 11 : valor >= 10 ? 10 : valor;\r\n    this.palo = palo;\r\n    this.img = IMAGENES_CARTAS[`${valor}${palo}`];\r\n  }\r\n}\r\n\r\nimport actualizarRecord from '../../metodos/actualizarRecord';\r\n\r\nimport Contexto from '../../metodos/Context';\r\nconst { Context } = Contexto;\r\n\r\nexport default function BlackJackGame() {\r\n\r\n  const nombreRecord = \"RecordBlackjackGame\";\r\n  const { informacionUsuario, online } = useContext(Context);\r\n\r\n  const [cartasJugador, setCartasJugador] = useState([]);\r\n  const [cartasCroupier, setCartasCroupier] = useState([]);\r\n  const [puntuacionJugador, setPuntuacionJugador] = useState(0);\r\n  const [puntuacionCroupier, setPuntuacionCroupier] = useState(0);\r\n  const [jugadorSePlanta, setJugadorSePlanta] = useState(true);\r\n  const [baraja, setBaraja] = useState([]);\r\n  const [racha, setRacha] = useState(0);\r\n  const [record, setRecord] = useState(0);\r\n  const [partidaActiva, setPartidaActiva] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (online) {\r\n      cargarRecord(informacionUsuario.token, nombreRecord, informacionUsuario.id_usuario, setRecord);\r\n    } else {\r\n      cargarDato(nombreRecord, setRecord)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (online) {\r\n      actualizarRecord(nombreRecord, informacionUsuario.id_usuario, record, informacionUsuario.token);\r\n    } else {\r\n      guardarDato(nombreRecord, record);\r\n    }\r\n  }, [record]);\r\n\r\n  const generarBaraja = () => {\r\n    let deck = [];\r\n    palos.forEach((palo) => {\r\n      for (let j = 1; j <= 13; j++) {\r\n        deck.push(new Carta(j, palo));\r\n      }\r\n    });\r\n    return deck.sort(() => Math.random() - 0.5);\r\n  };\r\n\r\n  const iniciarPartida = () => {\r\n    const nuevaBaraja = generarBaraja();\r\n    setBaraja(nuevaBaraja);\r\n    setCartasJugador([nuevaBaraja[0], nuevaBaraja[2]]);\r\n    setCartasCroupier([nuevaBaraja[1]]);\r\n    let puntosJugador = calcularPuntos([nuevaBaraja[0], nuevaBaraja[2]]);\r\n\r\n    if (puntosJugador == 21) {\r\n      if (nuevaBaraja[1].valor != 11 && nuevaBaraja[1].valor != 10) {\r\n        Alert.alert('Victoria', 'BLACKJACK, que sea así toda la noche 🔥 🐼');\r\n        setPuntuacionCroupier(nuevaBaraja[1].valor);\r\n        setRacha((prevRacha) => {\r\n          const nuevaRacha = prevRacha + 1;\r\n          if (nuevaRacha > record) {\r\n            setRecord(nuevaRacha);\r\n          }\r\n          return nuevaRacha;\r\n        });\r\n      } else {\r\n        let puntosCrupier = calcularPuntos([nuevaBaraja[1], nuevaBaraja[3]]);\r\n        if (puntosCrupier == 21) {\r\n          Alert.alert('Empate', 'DOBLE BLACKJACK, ESTO NO ES COMÚN 🗣🔥');\r\n          setCartasCroupier([nuevaBaraja[1], nuevaBaraja[3]]);\r\n        } else {\r\n          Alert.alert('Victoria', 'BLACKJACK, que sea así toda la noche 🔥 🐼');\r\n          setRacha((prevRacha) => {\r\n            const nuevaRacha = prevRacha + 1;\r\n            if (nuevaRacha > record) {\r\n              setRecord(nuevaRacha);\r\n            }\r\n            return nuevaRacha;\r\n          });\r\n          setCartasCroupier([nuevaBaraja[1], nuevaBaraja[3]]);\r\n        }\r\n        setPuntuacionCroupier(puntosCrupier);\r\n      }\r\n      setPuntuacionJugador(puntosJugador);\r\n      setJugadorSePlanta(true);\r\n      setPartidaActiva(false);\r\n      return;\r\n    }\r\n\r\n    setPartidaActiva(true);\r\n    setPuntuacionJugador(puntosJugador);\r\n    setPuntuacionCroupier(nuevaBaraja[1].valor);\r\n    setJugadorSePlanta(false);\r\n    setBaraja(nuevaBaraja.slice(3));\r\n  };\r\n\r\n  const calcularPuntos = (cartas) => {\r\n    let puntos = 0;\r\n    let cantidadAses = 0;\r\n\r\n    cartas.forEach((carta) => {\r\n      puntos += carta.valor;\r\n      if (carta.valor === 11) cantidadAses += 1;\r\n    });\r\n\r\n    while (puntos > 21 && cantidadAses > 0) {\r\n      puntos -= 10;\r\n      cantidadAses -= 1;\r\n    }\r\n\r\n    return puntos;\r\n  };\r\n\r\n  const pedirCarta = () => {\r\n    if (jugadorSePlanta || baraja.length === 0) return;\r\n    const nuevaCarta = baraja[0];\r\n    const nuevasCartasJugador = [...cartasJugador, nuevaCarta];\r\n    setCartasJugador(nuevasCartasJugador);\r\n    setPuntuacionJugador(calcularPuntos(nuevasCartasJugador));\r\n    if (calcularPuntos(nuevasCartasJugador) > 21) {\r\n      setJugadorSePlanta(true);\r\n      setPartidaActiva(false);\r\n      setRacha(0);\r\n      Alert.alert('Derrota', '¿Te has pasado un poco no crees? 🐼');\r\n    }\r\n    setBaraja(baraja.slice(1));\r\n  };\r\n\r\n  const plantarse = () => {\r\n    setJugadorSePlanta(true);\r\n\r\n    let cartasCrupierTemp = [...cartasCroupier];\r\n    let barajaTemp = [...baraja];\r\n    let puntosCrupier = calcularPuntos(cartasCrupierTemp);\r\n\r\n    const procesarTurnoCroupier = (index = 0) => {\r\n      if (puntosCrupier >= 17 || barajaTemp.length === 0) {\r\n        setCartasCroupier(cartasCrupierTemp);\r\n        setPuntuacionCroupier(puntosCrupier);\r\n        setBaraja(barajaTemp);\r\n\r\n        if (puntosCrupier > 21 || puntuacionJugador > puntosCrupier) {\r\n          Alert.alert('Victoria', '¿Serás capaz de ganar otra vez? 🐼');\r\n          setRacha((prevRacha) => {\r\n            const nuevaRacha = prevRacha + 1;\r\n            if (nuevaRacha > record) {\r\n              setRecord(nuevaRacha);\r\n            }\r\n            return nuevaRacha;\r\n          });\r\n        } else if (cartasCrupierTemp.length == 2 && puntosCrupier == 21) {\r\n          setRacha(0);\r\n          Alert.alert(\r\n            'Derrota',\r\n            'BLACKJACK de la banca, este mes no hay propinas 🐼'\r\n          );\r\n        } else if (puntuacionJugador == puntosCrupier) {\r\n          Alert.alert(\r\n            'Empate',\r\n            'Has tenido suerte, la próxima no tendrás tanta suerte 🐼'\r\n          );\r\n        } else {\r\n          setRacha(0);\r\n          Alert.alert('Derrota', 'La banca siempre gana 🐼');\r\n        }\r\n        setPartidaActiva(false);\r\n        return;\r\n      }\r\n\r\n      let nuevaCarta = barajaTemp.shift();\r\n      cartasCrupierTemp.push(nuevaCarta);\r\n      puntosCrupier = calcularPuntos(cartasCrupierTemp);\r\n\r\n      setCartasCroupier(cartasCrupierTemp);\r\n      setPuntuacionCroupier(puntosCrupier);\r\n      setBaraja(barajaTemp);\r\n\r\n      setTimeout(() => {\r\n        procesarTurnoCroupier(index + 1);\r\n      }, 500);\r\n    };\r\n\r\n    procesarTurnoCroupier();\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView style={styles.scrollContainer}>\r\n        <KeyboardAvoidingView\r\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n          style={{ flex: 1 }}>\r\n          <Header backVisible={false} />\r\n          <View style={styles.body}>\r\n            <Text style={styles.paragraph}>BLACKJACK</Text>\r\n\r\n            {puntuacionJugador != 0 && (\r\n              <>\r\n                <View style={styles.cartasContainer}>\r\n                  {cartasJugador.map((carta, index) => (\r\n                    <Image\r\n                      key={index}\r\n                      source={carta.img}\r\n                      style={styles.carta}\r\n                    />\r\n                  ))}\r\n                </View>\r\n                <Text style={styles.paragraph}>\r\n                  Tu puntuación: {puntuacionJugador}\r\n                </Text>\r\n              </>\r\n            )}\r\n\r\n            <Pressable\r\n              onPress={iniciarPartida}\r\n              style={({ pressed }) => [\r\n                styles.button,\r\n                partidaActiva && styles.buttonDisabled,\r\n                pressed && !partidaActiva && styles.buttonPressed,\r\n              ]}\r\n              disabled={partidaActiva}>\r\n              <Text style={styles.buttonText}>Iniciar Partida</Text>\r\n            </Pressable>\r\n\r\n            <Pressable\r\n              onPress={pedirCarta}\r\n              style={({ pressed }) => [\r\n                styles.button,\r\n                jugadorSePlanta && styles.buttonDisabled,\r\n                pressed && !jugadorSePlanta && styles.buttonPressed,\r\n              ]}\r\n              disabled={jugadorSePlanta}>\r\n              <Text style={styles.buttonText}>Pedir Carta</Text>\r\n            </Pressable>\r\n\r\n            <Pressable\r\n              onPress={plantarse}\r\n              style={({ pressed }) => [\r\n                styles.button,\r\n                jugadorSePlanta && styles.buttonDisabled,\r\n                pressed && !jugadorSePlanta && styles.buttonPressed,\r\n              ]}\r\n              disabled={jugadorSePlanta}>\r\n              <Text style={styles.buttonText}>Plantarse</Text>\r\n            </Pressable>\r\n\r\n            {puntuacionJugador != 0 && (\r\n              <>\r\n                <View style={styles.cartasContainer}>\r\n                  {cartasCroupier.map((carta, index) => (\r\n                    <Image\r\n                      key={index}\r\n                      source={carta.img}\r\n                      style={styles.carta}\r\n                    />\r\n                  ))}\r\n                </View>\r\n                <Text style={styles.paragraph}>\r\n                  Puntos Croupier: {puntuacionCroupier}\r\n                </Text>\r\n              </>\r\n            )}\r\n          </View>\r\n          <StreakCounter racha={racha} record={record} />\r\n        </KeyboardAvoidingView>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  scrollContainer: {\r\n    flex: 1,\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  body: {\r\n    flex: 8,\r\n    alignItems: 'center',\r\n  },\r\n  paragraph: {\r\n    marginTop: 20,\r\n    fontSize: 28,\r\n    textAlign: 'center',\r\n    zIndex: 2,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n  },\r\n  button: {\r\n    backgroundColor: 'black',\r\n    width: 250,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n  },\r\n  buttonDisabled: {\r\n    backgroundColor: 'gray',\r\n  },\r\n  buttonPressed: {\r\n    backgroundColor: '#333',\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 25,\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n  cartasContainer: {\r\n    flexDirection: 'row',\r\n    marginTop: 5,\r\n  },\r\n  carta: {\r\n    width: 60,\r\n    height: 90,\r\n    margin: 5,\r\n  },\r\n});","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport BlackJackPaga from './BlackJackPaga';\r\nimport BlackJackGame from './BlackJackGame';\r\n\r\nconst Tab_BlackJack = createBottomTabNavigator();\r\n\r\nconst App = () => (\r\n  <Tab_BlackJack.Navigator\r\n    screenOptions={({ route }) => ({\r\n      tabBarStyle: {\r\n        backgroundColor: 'black',\r\n        borderTopWidth: 0,\r\n        height: 60,\r\n        justifyContent: 'center',\r\n      },\r\n      tabBarInactiveBackgroundColor: '#2f2f2f',\r\n      tabBarActiveBackgroundColor: 'black',\r\n      tabBarInactiveTintColor: 'white',\r\n      tabBarActiveTintColor: '#FFFFFF',\r\n      tabBarLabelStyle: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        textAlignVertical: 'center',\r\n      },\r\n      headerShown: false,\r\n      tabBarIcon: ({ color, size }) => {\r\n        let iconName;\r\n        switch (route.name) {\r\n          case 'BlackJack Paga':\r\n            iconName = 'cash-outline';\r\n            break;\r\n          case 'Jugar':\r\n            iconName = 'game-controller-sharp';\r\n            break;\r\n          default:\r\n            iconName = 'help-circle-outline';\r\n        }\r\n        return <Ionicons name={iconName} size={size} color={color} />;\r\n      },\r\n    })}>\r\n    <Tab_BlackJack.Screen name=\"BlackJack Paga\" component={BlackJackPaga} />\r\n    <Tab_BlackJack.Screen name=\"Jugar\" component={BlackJackGame} />\r\n  </Tab_BlackJack.Navigator>\r\n);\r\n\r\nexport default App;","const CLASIFICACIONES = [\r\n    { label: \"Blackjack Paga\", value: \"RecordBlackjackPaga\" },\r\n    { label: \"Blackjack Juego\", value: \"RecordBlackjackGame\" },\r\n    { label: \"Zonas\", value: \"RecordZonas\" },\r\n    { label: \"Vecinos\", value: \"RecordVecinos\" },\r\n    { label: \"Cierre\", value: \"RecordCierre\" },\r\n    { label: \"Tabla 1.25\", value: \"RecordTabla1.25\" },\r\n    { label: \"Tabla 2.5\", value: \"RecordTabla2.5\" },\r\n    { label: \"Tabla 5\", value: \"RecordTabla5\" },\r\n    { label: \"Tabla 8\", value: \"RecordTabla8\" },\r\n    { label: \"Tabla 10\", value: \"RecordTabla10\" },\r\n    { label: \"Tabla 11\", value: \"RecordTabla11\" },\r\n    { label: \"Tabla 17\", value: \"RecordTabla17\" },\r\n    { label: \"Tabla 25\", value: \"RecordTabla25\" },\r\n    { label: \"Tabla 35\", value: \"RecordTabla35\" },\r\n    { label: \"Tabla 50\", value: \"RecordTabla50\" },\r\n    { label: \"Tabla 100\", value: \"RecordTabla100\" },\r\n    { label: \"Tabla 500\", value: \"RecordTabla500\" }\r\n  ];\r\n  \r\n  export default CLASIFICACIONES;","import {\r\n    Text,\r\n    SafeAreaView,\r\n    StyleSheet,\r\n    View,\r\n    ScrollView,\r\n    FlatList,\r\n} from 'react-native';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport CLASIFICACIONES from '../../metodos/UtilsClasificacion';\r\nimport Header from '../../components/Header';\r\nimport Contexto from '../../metodos/Context';\r\nconst { Context } = Contexto;\r\nimport getData from '../../metodos/services';\r\n\r\nimport LoadingScreen from '../LoadingScreen';\r\n\r\nexport default function Clasificacion() {\r\n    const [loading, setLoading] = useState(false);\r\n    const { informacionUsuario, online } = useContext(Context);\r\n    const [clasification, setClasification] = useState([]);\r\n\r\n    const [selectedSection, setSelectedSection] = useState('RecordBlackjackPaga');\r\n\r\n    const obtenerClasificaciones = async () => {\r\n        try {\r\n            setLoading(true);\r\n\r\n            const timeout = 25000;\r\n\r\n            const timeoutPromise = new Promise((_, reject) =>\r\n                setTimeout(() => reject(new Error(\"Tiempo de espera agotado\")), timeout)\r\n            );\r\n\r\n            const url = `http://54.237.169.52:8080/CroupierAPI/getRecords?token=${informacionUsuario.token}&nombreRecord=${selectedSection}`;\r\n\r\n            const data = await Promise.race([getData(url), timeoutPromise]);\r\n\r\n            console.log(data.results);\r\n            const clasifications = data.results;\r\n            setClasification(clasifications);\r\n        } catch (error) {\r\n            console.error('Error al obtener clasificaciones:', error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const primeraLetraMayuscula = (str) => {\r\n        return str.split(' ').map(palabra => palabra.charAt(0).toUpperCase() + palabra.slice(1).toLowerCase()).join(' ');\r\n    }\r\n\r\n    useEffect(() => {\r\n        setClasification([]);\r\n        if (online) {\r\n            obtenerClasificaciones();\r\n        }\r\n    }, [selectedSection]);\r\n\r\n    return (\r\n        <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n            <SafeAreaView style={styles.container}>\r\n                <Header backVisible={false} />\r\n                <View style={{ flex: 1, justifyContent: \"flex-end\" }}>\r\n                    <Text style={styles.title}>CLASIFICACIÓN</Text>\r\n\r\n                    {!online && <Text style={styles.advisor}>¡Accede con una cuenta para poder ver las clasificaciones!</Text>\r\n                    }\r\n\r\n                    <View style={styles.sectionContainer}>\r\n                        <View style={{ flex: 0.5 }}><Text style={styles.sectionText}>Sección:</Text>\r\n                        </View>\r\n                        <View style={{\r\n                            minWidth: 230,\r\n                            maxWidth: 255,\r\n                            borderWidth: 2,\r\n                            borderColor: 'black',\r\n                            borderRadius: 5,\r\n                            overflow: 'hidden'\r\n                        }}>\r\n\r\n                            <Picker\r\n                                selectedValue={selectedSection}\r\n                                style={styles.picker}\r\n                                onValueChange={(itemValue) => setSelectedSection(itemValue)}\r\n                            >\r\n                                {CLASIFICACIONES.map((item) => (\r\n                                    <Picker.Item\r\n                                        key={item.value}\r\n                                        label={item.label}\r\n                                        value={item.value}\r\n                                        style={{ fontFamily: 'Merriweather-Light', fontSize: 19 }}\r\n                                    />\r\n                                ))}\r\n                            </Picker>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <View style={{ flex: 4 }}>\r\n                    <View style={styles.table}>\r\n                        <View style={styles.headerRow}>\r\n                            <Text style={styles.positionCell}>Posición</Text>\r\n                            <Text style={styles.userCell}>Usuario</Text>\r\n                            <Text style={styles.recordCell}>Récord</Text>\r\n                        </View>\r\n\r\n                        <FlatList\r\n                            scrollEnabled={false}\r\n                            data={clasification}\r\n                            keyExtractor={(item, index) => index.toString()}\r\n                            renderItem={({ item, index }) => {\r\n                                let backgroundColor = 'white';\r\n\r\n                                if (index === 0) backgroundColor = '#FFD700';\r\n                                else if (index === 1) backgroundColor = '#C0C0C0';\r\n                                else if (index === 2) backgroundColor = '#CD7F32';\r\n\r\n                                return (\r\n                                    <View style={[styles.row, { backgroundColor }]}>\r\n                                        <Text style={styles.positionCell}>{(index + 1).toString()}</Text>\r\n                                        <Text style={styles.userCell}>{primeraLetraMayuscula(item.nombreUsuario)}</Text>\r\n                                        <Text style={styles.recordCell}>{item.puntuacion}</Text>\r\n                                    </View>\r\n                                );\r\n                            }}\r\n                        />\r\n                    </View>\r\n                </View>\r\n                {loading && <LoadingScreen/>}\r\n            </SafeAreaView>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    scrollContainer: {\r\n        flexGrow: 1,\r\n        backgroundColor: '#fcfcfc',\r\n    },\r\n    title: {\r\n        flex: 1,\r\n        fontSize: 38,\r\n        fontFamily: 'Merriweather-SemiBold',\r\n        textAlign: 'center',\r\n    },\r\n    advisor: {\r\n        flex: 1,\r\n        fontSize: 25,\r\n        padding: 10,\r\n        fontFamily: 'Merriweather-SemiBold',\r\n        textAlign: 'center',\r\n    },\r\n    sectionContainer: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    sectionText: {\r\n        flex: 1,\r\n        textAlignVertical: \"center\",\r\n        textAlign: \"right\",\r\n        fontSize: 25,\r\n        fontFamily: 'Merriweather-Light',\r\n    },\r\n    picker: {\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        height: 60,\r\n    },\r\n    table: {\r\n        width: '90%',\r\n        borderWidth: 2,\r\n        borderRadius: 5,\r\n        borderColor: 'black',\r\n        marginTop: 10,\r\n        alignSelf: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n    headerRow: {\r\n        flexDirection: 'row',\r\n        backgroundColor: '#ddd',\r\n        paddingVertical: 10,\r\n        textAlign: \"center\",\r\n    },\r\n    row: {\r\n        flexDirection: 'row',\r\n        paddingVertical: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    positionCell: {\r\n        flex: 0.45,\r\n        textAlign: 'center',\r\n        fontSize: 16,\r\n        fontFamily: 'Merriweather-Light',\r\n    },\r\n    userCell: {\r\n        flex: 1.2,\r\n        textAlign: 'center',\r\n        fontSize: 16,\r\n        fontFamily: 'Merriweather-Light',\r\n    },\r\n    recordCell: {\r\n        flex: 0.7,\r\n        textAlign: 'center',\r\n        fontSize: 16,\r\n        fontFamily: 'Merriweather-Light',\r\n    },\r\n});","import {\r\n  Text,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  ScrollView,\r\n  Pressable,\r\n  Alert,\r\n} from 'react-native';\r\n\r\nimport { useContext } from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport Header from '../../components/Header';\r\nimport { borrarTodosLosRecords } from '../../metodos/StorageUtils';\r\n\r\nimport Contexto from '../../metodos/Context';\r\nconst { Context } = Contexto;\r\n\r\nexport default function AboutApp() {\r\n  const navigation = useNavigation();\r\n  const { informacionUsuario, online } = useContext(Context);\r\n\r\n  const borradoRecords = () => {\r\n    Alert.alert(\r\n      'Confirmación',\r\n      '¿Estás seguro de que deseas borrar todos los récords? (solo se borrarán de su dispositivo).',\r\n      [\r\n        {\r\n          text: 'Cancelar',\r\n          onPress: () => console.log('Cancelado'),\r\n          style: 'cancel',\r\n        },\r\n        {\r\n          text: 'Confirmar',\r\n          onPress: () => {\r\n            borrarTodosLosRecords();\r\n            navigation.navigate('Home');\r\n          },\r\n        },\r\n      ],\r\n      { cancelable: false }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n      <SafeAreaView style={styles.container}>\r\n        <Header backVisible={false} />\r\n        <View style={styles.body}>\r\n          <View style={{ flex: 0.5 }}>\r\n            <Text style={styles.paragraph}>Sobre la App</Text>\r\n          </View>\r\n          <View style={styles.juanito}>\r\n            <Image\r\n              source={require('../../assets/Juanito.webp')}\r\n              style={styles.image}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.section}>\r\n            <Text style={styles.sectionTitle}>¿Quién Soy?</Text>\r\n            <Text style={styles.sectionText}>\r\n              Hola, soy Juan Martín Barrachina Alfonso, también conocido como\r\n              Martín o \"Juanito\".\r\n            </Text>\r\n          </View>\r\n\r\n          <View style={styles.section}>\r\n            <Text style={styles.sectionTitle}>¿Por qué he desarrollado esta app?</Text>\r\n            <Text style={styles.sectionText}>\r\n              Desarrollé esta aplicación porque, mientras realizaba el cursillo de croupier,\r\n              me ayudó mucho practicar con los minijuegos que contiene para\r\n              mejorar mi cálculo y agilidad mental.\r\n            </Text>\r\n          </View>\r\n\r\n          <View style={styles.section}>\r\n            <Text style={styles.sectionTitle}>Disfruta de la app 🙂</Text>\r\n            <Text style={styles.sectionText}>\r\n              Si estás leyendo esto, espero que disfrutes la aplicación y que te\r\n              sea tan útil como lo ha sido para mí.\r\n            </Text>\r\n            <Text style={styles.sectionText}>\r\n              Un saludo para mis profesores y amigos de Florida Universitària, a\r\n              mis compañeros de trabajo del Casino y a Mari Carmen ¡La mejor\r\n              profe!\r\n            </Text>\r\n          </View>\r\n\r\n          {!online && (\r\n            <View\r\n              style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n              <Pressable onPress={() => borradoRecords()} style={styles.button}>\r\n                <Text style={styles.buttonText}>Borrar récords</Text>\r\n              </Pressable>\r\n            </View>)\r\n          }\r\n        </View>\r\n      </SafeAreaView>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  body: { flex: 8, padding: 8 },\r\n\r\n  scrollContainer: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n  paragraph: {\r\n    fontSize: 35,\r\n    fontFamily: 'Merriweather-SemiBold',\r\n    textAlign: 'center',\r\n    marginTop: 2,\r\n    marginBottom: 5,\r\n  },\r\n  juanito: {\r\n    flex: 2,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  image: {\r\n    height: 250,\r\n    width: 250,\r\n    resizeMode: 'contain',\r\n  },\r\n\r\n  section: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    marginTop: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: '#2c3e50',\r\n  },\r\n  sectionText: {\r\n    fontSize: 20,\r\n    lineHeight: 22,\r\n    color: '#34495e',\r\n  },\r\n\r\n  button: {\r\n    backgroundColor: 'black',\r\n    width: 250,\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 25,\r\n    marginBottom: 10,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 25,\r\n    fontFamily: 'Merriweather-Light',\r\n  },\r\n});\r\n","import { SafeAreaView, StyleSheet } from 'react-native';\r\nimport Home from './Home';\r\nimport Tab_Ruleta from './Ruleta/Tab_Ruleta'\r\nimport Tab_BlackJack from './BlackJack/Tab_BlackJack';\r\nimport Clasificacion from './Clasificacion/Clasificacion';\r\nimport AboutApp from './AboutApp/AboutApp';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n        <Stack.Navigator>\r\n          <Stack.Screen\r\n            name=\"Home\"\r\n            component={Home}\r\n            options={{ headerShown: false }}\r\n          />\r\n          <Stack.Screen\r\n            name=\"Tab_Ruleta\"\r\n            component={Tab_Ruleta}\r\n            options={{ headerShown: false }}\r\n          />\r\n          <Stack.Screen\r\n            name=\"Tab_BlackJack\"\r\n            component={Tab_BlackJack}\r\n            options={{ headerShown: false }}\r\n          />\r\n          <Stack.Screen\r\n            name=\"Clasificacion\"\r\n            component={Clasificacion}\r\n            options={{ headerShown: false }}\r\n          />\r\n          <Stack.Screen\r\n            name=\"AboutApp\"\r\n            component={AboutApp}\r\n            options={{ headerShown: false }}\r\n          />\r\n        </Stack.Navigator>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fcfcfc',\r\n  },\r\n});\r\n","import { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\nimport LogIn from './LogIn';\r\nimport RecuperarContrasenya from './RecuperarContrasenya';\r\nimport StackRegistro from '../Registro/StackRegistro';\r\nimport MainMenu from '../MainMenu';\r\nimport Contexto from '../../metodos/Context';\r\nconst { Provider } = Contexto;\r\nconst Stack = createStackNavigator();\r\n\r\nconst StackLogin = () => (\r\n  <Provider>\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        <Stack.Screen name=\"LogIn\" component={LogIn} />\r\n        <Stack.Screen name=\"RecuperarContrasenya\" component={RecuperarContrasenya} />\r\n        <Stack.Screen name=\"StackRegistro\" component={StackRegistro} />\r\n        <Stack.Screen name=\"MainMenu\" component={MainMenu} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  </Provider>\r\n);\r\n\r\nexport default StackLogin;","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React, { useEffect } from 'react';\nimport { BackHandler, Platform } from 'react-native';\nimport StackLogin from './src/screens/LogIn/StackLogin';\n\nexport default function App() {\n  useEffect(() => {\n    // Solo manejamos el backPress en Android, ya que en la web no tiene sentido\n    if (Platform.OS === 'android') {\n      const backAction = () => {\n        return true; // Previene el comportamiento por defecto\n      };\n\n      const backHandler = BackHandler.addEventListener(\n        'hardwareBackPress',\n        backAction\n      );\n\n      return () => backHandler.remove();\n    }\n  }, []);\n\n  return <StackLogin />;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/PRUEBITA/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [693], () => (__webpack_require__(8485)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","StyleSheet","create","overlay","flex","backgroundColor","justifyContent","alignItems","image","width","height","LoadingScreen","_jsxs","Modal","transparent","visible","animationType","statusBarTranslucent","children","_jsx","StatusBar","barStyle","View","style","Image","source","require","Context","createContext","Provider","ContextProvider","informacionUsuario","setInformacionUsuario","useState","online","setOnline","value","Contexto","LogIn","props","loading","setLoading","usuario","setUsuario","contrasenya","setContrasenya","useContext","SafeAreaView","container","KeyboardAvoidingView","behavior","ScrollView","contentContainerStyle","scrollContainer","minHeight","keyboardShouldPersistTaps","TouchableWithoutFeedback","onPress","Keyboard","dismiss","containerWelcome","Text","paragraph","logo","inputContainer","label","TextInput","input","onChangeText","text","replace","placeholder","placeholderTextColor","secureTextEntry","Pressable","navigation","navigate","buttonRegistrar","textRegistrar","async","Alert","alert","datos","nombreUsuario","controller","AbortController","timeoutId","setTimeout","abort","respuesta","fetch","method","headers","body","JSON","stringify","signal","clearTimeout","resultado","json","ok","message","console","log","error","mensajeError","name","enviarDatos","button","buttonText","paddingBottom","padding","fontSize","textAlign","fontFamily","borderRadius","marginBottom","margin","color","textDecorationLine","marginLeft","borderWidth","header","flexDirection","back","icon","marginHorizontal","marginTop","home","useNavigation","backVisible","backAction","goBack","homeVisible","homeAction","RecuperarContrasenya","correo","setCorreo","Header","contentContainer","title","returnKeyType","test","esCorreoValido","correoElectronico","recuperarContrasenya","flexGrow","paddingHorizontal","opacity","maxWidth","borderColor","Registro","setCorreoElectronico","confirmarContrasenya","setConfirmarContrasenya","aceptoTerminos","setAceptoTerminos","formContainer","inputGroup","keyboardType","termsContainer","TouchableOpacity","checkbox","checked","checkmark","checkboxLabel","linkText","privacyLink","url","marginVertical","alignSelf","flexWrap","marginRight","secondaryButton","secondaryButtonText","scrollContent","paddingVertical","fontWeight","card","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","introText","lineHeight","section","sectionTitle","sectionText","footer","borderTopWidth","borderTopColor","footerText","PoliticaPrivacidad","Date","getFullYear","ConfirmarRegistro","codigo","setCodigo","maxLength","numeroConfirmacion","confRegistro","Stack","createStackNavigator","StackRegistro","Navigator","options","Screen","component","headerShown","cerrarSesion","token","warn","status","Home","HeaderMainMenu","containerButtons","SeleccionarTabla","tablasPorFichas","setTablasPorFichas","tablasPorValor","setTablasPorValor","gridContainer","map","tabla","index","gap","cargarDato","clave","setEstado","valorGuardado","AsyncStorage","getItem","parseInt","guardarDato","valor","setItem","toString","response","jsonResponse","cargarRecord","nombreRecord","id_usuario","setRecord","data","getData","undefined","puntuacion","nombreR","id_usu","record","tok","streak","racha","textRacha","StreakCounter","Tabla","route","params","resultadoCorrecto","setResultadoCorrecto","numeroMultiplicado","setNumeroMultiplicado","respuestaUsuario","setRespuestaUsuario","textoComprobar","setTextoComprobar","colorComprobar","setColorComprobar","mostrarRespuesta","setMostrarRespuesta","setRacha","useEffect","generarMultiplicacion","actualizarRecord","multiplicador","Math","floor","random","answer","question","texto","verificarRespuesta","rachaAvanza","zIndex","TablasStack","Zonas","numerosTercio","setNumerosTercio","numerosHuerfanos","setNumerosHuerfanos","numerosVecinosDel0","setNumerosVecinosDel0","numeroAleatorio","setNumeroAleatorio","generarNumero","numero","includes","Vecinos","secuenciaRuleta","setSecuenciaRuleta","vecinos","setVecinos","nombre","correcto","calcularVecinos","seleccionado","indice","indexOf","i","indiceIzquierda","length","push","j","indiceDerecha","sort","a","b","keyboardDismissMode","vecino","nuevosVecinos","editable","vecinosReordenados","Array","fill","forEach","v","valorCorrecto","vecinoIndex","findIndex","Object","assign","every","nuevaRacha","borrarIncorrectos","vecinitos","manejarMostrarRespuesta","nombreAleatorio","nom","comprobarEmoji","emoji","getRandomInt","min","max","mensaje","tiempo","reloj","tiempoRecord","relojRecord","table","headerRow","headerCell","headerCellInput","row","borderBottomWidth","borderBottomColor","cell","footerRow","footerCell","Cierre","setNombre","setEmoji","setTiempo","corriendo","setCorriendo","valoresIntroducidos","setValoresIntroducidos","respuestaTotal","setRespuestaTotal","bordes","setBordes","tiempoPersonal","setTiempoPersonal","fichas","setFichas","cantidad","intervalo","setInterval","prev","clearInterval","formatearTiempo","segundos","padStart","total","reduce","acc","ficha","FlatList","scrollEnabled","keyExtractor","item","renderItem","reiniciar","nuevoNombre","mostrarRespuestas","respuestas","totalRespuesta","respuestaCorrecta","toFixed","parseFloat","comprobarRespuestas","todasCorrectas","nuevosBordes","devolverMensaje","Tab_Ruleta","createBottomTabNavigator","App","screenOptions","tabBarStyle","tabBarInactiveBackgroundColor","tabBarActiveBackgroundColor","tabBarInactiveTintColor","tabBarActiveTintColor","tabBarLabelStyle","textAlignVertical","tabBarIcon","size","iconName","Ionicons","Tablas","BlackJackPaga","palos","Carta","constructor","palo","this","img","IMAGENES_CARTAS","BlackJackGame","cartasJugador","setCartasJugador","cartasCroupier","setCartasCroupier","puntuacionJugador","setPuntuacionJugador","puntuacionCroupier","setPuntuacionCroupier","jugadorSePlanta","setJugadorSePlanta","baraja","setBaraja","partidaActiva","setPartidaActiva","calcularPuntos","cartas","puntos","cantidadAses","carta","_Fragment","cartasContainer","iniciarPartida","nuevaBaraja","generarBaraja","deck","puntosJugador","prevRacha","puntosCrupier","slice","pressed","buttonDisabled","buttonPressed","disabled","pedirCarta","nuevaCarta","nuevasCartasJugador","plantarse","cartasCrupierTemp","barajaTemp","procesarTurnoCroupier","shift","Tab_BlackJack","Clasificacion","clasification","setClasification","selectedSection","setSelectedSection","timeout","timeoutPromise","Promise","_","reject","Error","race","results","clasifications","obtenerClasificaciones","advisor","sectionContainer","minWidth","overflow","Picker","selectedValue","picker","onValueChange","itemValue","CLASIFICACIONES","Item","positionCell","userCell","recordCell","str","split","palabra","charAt","toUpperCase","toLowerCase","join","AboutApp","borradoRecords","clear","borrarTodosLosRecords","cancelable","juanito","resizeMode","StackLogin","NavigationContainer","MainMenu","registerRootComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}